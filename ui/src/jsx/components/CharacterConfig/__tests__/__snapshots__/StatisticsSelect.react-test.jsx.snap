// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component: StatisticsSelect should render with ASI props 1`] = `
<StatisticsSelect
  character={
    Object {
      "statistics": Object {
        "bare": Object {
          "charisma": 12,
          "constitution": 12,
          "dexterity": 12,
          "intelligence": 12,
          "strength": 12,
          "wisdom": 12,
        },
        "base": Object {
          "charisma": 12,
          "constitution": 12,
          "dexterity": 12,
          "intelligence": 12,
          "strength": 12,
          "wisdom": 12,
        },
        "bonus": Object {
          "charisma": Array [
            1,
            2,
          ],
          "constitution": Array [
            1,
            2,
          ],
          "dexterity": Array [
            1,
            2,
          ],
          "intelligence": Array [
            1,
            2,
          ],
          "strength": Array [
            1,
            2,
          ],
          "wisdom": Array [
            1,
            2,
          ],
        },
        "modifiers": Object {
          "charisma": -1,
          "constitution": -1,
          "dexterity": -1,
          "intelligence": -1,
          "strength": -1,
          "wisdom": -1,
        },
        "statistics": Array [],
      },
    }
  }
  editBase={false}
  limit={2}
  path="character.statistics"
  setState={[Function]}
  type="ability_score"
  uuid="mock-uuid-asi-1"
>
  <ListDataStatsBlock
    bare={
      Object {
        "charisma": 12,
        "constitution": 12,
        "dexterity": 12,
        "intelligence": 12,
        "strength": 12,
        "wisdom": 12,
      }
    }
    base={
      Object {
        "charisma": 12,
        "constitution": 12,
        "dexterity": 12,
        "intelligence": 12,
        "strength": 12,
        "wisdom": 12,
      }
    }
    bonus={
      Object {
        "charisma": Array [
          1,
          2,
        ],
        "constitution": Array [
          1,
          2,
        ],
        "dexterity": Array [
          1,
          2,
        ],
        "intelligence": Array [
          1,
          2,
        ],
        "strength": Array [
          1,
          2,
        ],
        "wisdom": Array [
          1,
          2,
        ],
      }
    }
    budget={27}
    editBase={false}
    increase={2}
    manualChange={[Function]}
    maxBare={15}
    minBare={8}
    modifiers={
      Object {
        "charisma": -1,
        "constitution": -1,
        "dexterity": -1,
        "intelligence": -1,
        "strength": -1,
        "wisdom": -1,
      }
    }
    path="character.statistics"
    setState={[Function]}
    statistics={Array []}
  >
    <StatsBlock
      bare={
        Object {
          "charisma": 12,
          "constitution": 12,
          "dexterity": 12,
          "intelligence": 12,
          "strength": 12,
          "wisdom": 12,
        }
      }
      base={
        Object {
          "charisma": 12,
          "constitution": 12,
          "dexterity": 12,
          "intelligence": 12,
          "strength": 12,
          "wisdom": 12,
        }
      }
      bonus={
        Object {
          "charisma": Array [
            1,
            2,
          ],
          "constitution": Array [
            1,
            2,
          ],
          "dexterity": Array [
            1,
            2,
          ],
          "intelligence": Array [
            1,
            2,
          ],
          "strength": Array [
            1,
            2,
          ],
          "wisdom": Array [
            1,
            2,
          ],
        }
      }
      budget={27}
      editBase={false}
      increase={2}
      manualChange={[Function]}
      maxBare={15}
      minBare={8}
      modifiers={
        Object {
          "charisma": -1,
          "constitution": -1,
          "dexterity": -1,
          "intelligence": -1,
          "strength": -1,
          "wisdom": -1,
        }
      }
      path="character.statistics"
      setState={[Function]}
      statistics={Array []}
    >
      <table
        className="nice-table stats-block condensed bordered"
      >
        <Header
          increase={2}
          showBonus={true}
          showFinal={true}
        >
          <thead>
            <tr>
              <th>
                Statistic
              </th>
              <th
                className="text-align-center"
              >
                Base
              </th>
              <th
                className="text-align-center"
                colSpan={2}
              >
                Increase
              </th>
              <th
                className="text-align-center"
              >
                Bonus
              </th>
              <th
                className="text-align-center"
              >
                Final
              </th>
              <th
                className="text-align-center"
              >
                Modifier
              </th>
            </tr>
          </thead>
        </Header>
        <tbody />
        <Footer
          bonus={0}
          budget={27}
          increase={2}
          showBonus={true}
          showFinal={true}
          spent={0}
        >
          <tfoot>
            <tr
              className="text-align-center"
              key="budget"
            >
              <th>
                Budget
              </th>
              <td>
                27
              </td>
              <td
                colSpan={5}
              />
            </tr>
          </tfoot>
        </Footer>
      </table>
    </StatsBlock>
  </ListDataStatsBlock>
</StatisticsSelect>
`;

exports[`Component: StatisticsSelect should render with base stats props 1`] = `
<StatisticsSelect
  character={
    Object {
      "statistics": Object {
        "bare": Object {
          "charisma": 12,
          "constitution": 12,
          "dexterity": 12,
          "intelligence": 12,
          "strength": 12,
          "wisdom": 12,
        },
        "base": Object {
          "charisma": 12,
          "constitution": 12,
          "dexterity": 12,
          "intelligence": 12,
          "strength": 12,
          "wisdom": 12,
        },
        "bonus": Object {
          "charisma": Array [
            1,
            2,
          ],
          "constitution": Array [
            1,
            2,
          ],
          "dexterity": Array [
            1,
            2,
          ],
          "intelligence": Array [
            1,
            2,
          ],
          "strength": Array [
            1,
            2,
          ],
          "wisdom": Array [
            1,
            2,
          ],
        },
        "modifiers": Object {
          "charisma": -1,
          "constitution": -1,
          "dexterity": -1,
          "intelligence": -1,
          "strength": -1,
          "wisdom": -1,
        },
        "statistics": Array [],
      },
    }
  }
  editBase={true}
  limit={0}
  maxBare={10}
  minBare={10}
  path="character.statistics"
  setState={[Function]}
  type="statistics"
  uuid="mock-uuid-stats-1"
>
  <ListDataStatsBlock
    bare={
      Object {
        "charisma": 12,
        "constitution": 12,
        "dexterity": 12,
        "intelligence": 12,
        "strength": 12,
        "wisdom": 12,
      }
    }
    base={
      Object {
        "charisma": 12,
        "constitution": 12,
        "dexterity": 12,
        "intelligence": 12,
        "strength": 12,
        "wisdom": 12,
      }
    }
    bonus={
      Object {
        "charisma": Array [
          1,
          2,
        ],
        "constitution": Array [
          1,
          2,
        ],
        "dexterity": Array [
          1,
          2,
        ],
        "intelligence": Array [
          1,
          2,
        ],
        "strength": Array [
          1,
          2,
        ],
        "wisdom": Array [
          1,
          2,
        ],
      }
    }
    budget={27}
    editBase={true}
    increase={0}
    manualChange={[Function]}
    maxBare={10}
    minBare={10}
    modifiers={
      Object {
        "charisma": -1,
        "constitution": -1,
        "dexterity": -1,
        "intelligence": -1,
        "strength": -1,
        "wisdom": -1,
      }
    }
    path="character.statistics"
    setState={[Function]}
    statistics={Array []}
  >
    <StatsBlock
      bare={
        Object {
          "charisma": 12,
          "constitution": 12,
          "dexterity": 12,
          "intelligence": 12,
          "strength": 12,
          "wisdom": 12,
        }
      }
      base={
        Object {
          "charisma": 12,
          "constitution": 12,
          "dexterity": 12,
          "intelligence": 12,
          "strength": 12,
          "wisdom": 12,
        }
      }
      bonus={
        Object {
          "charisma": Array [
            1,
            2,
          ],
          "constitution": Array [
            1,
            2,
          ],
          "dexterity": Array [
            1,
            2,
          ],
          "intelligence": Array [
            1,
            2,
          ],
          "strength": Array [
            1,
            2,
          ],
          "wisdom": Array [
            1,
            2,
          ],
        }
      }
      budget={27}
      editBase={true}
      increase={0}
      manualChange={[Function]}
      maxBare={10}
      minBare={10}
      modifiers={
        Object {
          "charisma": -1,
          "constitution": -1,
          "dexterity": -1,
          "intelligence": -1,
          "strength": -1,
          "wisdom": -1,
        }
      }
      path="character.statistics"
      setState={[Function]}
      statistics={Array []}
    >
      <table
        className="nice-table stats-block condensed bordered"
      >
        <Header
          increase={0}
          showBonus={true}
          showFinal={true}
        >
          <thead>
            <tr>
              <th>
                Statistic
              </th>
              <th
                className="text-align-center"
              >
                Base
              </th>
              <th
                className="text-align-center"
              >
                Bonus
              </th>
              <th
                className="text-align-center"
              >
                Final
              </th>
              <th
                className="text-align-center"
              >
                Modifier
              </th>
            </tr>
          </thead>
        </Header>
        <tbody />
        <Footer
          bonus={0}
          budget={27}
          increase={0}
          showBonus={true}
          showFinal={true}
          spent={0}
        >
          <tfoot>
            <tr
              className="text-align-center"
              key="budget"
            >
              <th>
                Budget
              </th>
              <td>
                27
              </td>
              <td
                colSpan={3}
              />
            </tr>
          </tfoot>
        </Footer>
      </table>
    </StatsBlock>
  </ListDataStatsBlock>
</StatisticsSelect>
`;

exports[`Component: StatisticsSelect should render with minimum props 1`] = `
<StatisticsSelect
  character={
    Object {
      "statistics": Object {
        "bare": Object {
          "charisma": 12,
          "constitution": 12,
          "dexterity": 12,
          "intelligence": 12,
          "strength": 12,
          "wisdom": 12,
        },
        "base": Object {
          "charisma": 12,
          "constitution": 12,
          "dexterity": 12,
          "intelligence": 12,
          "strength": 12,
          "wisdom": 12,
        },
        "bonus": Object {
          "charisma": Array [
            1,
            2,
          ],
          "constitution": Array [
            1,
            2,
          ],
          "dexterity": Array [
            1,
            2,
          ],
          "intelligence": Array [
            1,
            2,
          ],
          "strength": Array [
            1,
            2,
          ],
          "wisdom": Array [
            1,
            2,
          ],
        },
        "modifiers": Object {
          "charisma": -1,
          "constitution": -1,
          "dexterity": -1,
          "intelligence": -1,
          "strength": -1,
          "wisdom": -1,
        },
        "statistics": Array [],
      },
    }
  }
  editBase={false}
  limit={0}
  path="character.statistics"
  setState={[Function]}
  type="ability_score"
  uuid="mock-uuid-asi-1"
>
  <ListDataStatsBlock
    bare={
      Object {
        "charisma": 12,
        "constitution": 12,
        "dexterity": 12,
        "intelligence": 12,
        "strength": 12,
        "wisdom": 12,
      }
    }
    base={
      Object {
        "charisma": 12,
        "constitution": 12,
        "dexterity": 12,
        "intelligence": 12,
        "strength": 12,
        "wisdom": 12,
      }
    }
    bonus={
      Object {
        "charisma": Array [
          1,
          2,
        ],
        "constitution": Array [
          1,
          2,
        ],
        "dexterity": Array [
          1,
          2,
        ],
        "intelligence": Array [
          1,
          2,
        ],
        "strength": Array [
          1,
          2,
        ],
        "wisdom": Array [
          1,
          2,
        ],
      }
    }
    budget={27}
    editBase={false}
    increase={0}
    manualChange={[Function]}
    maxBare={15}
    minBare={8}
    modifiers={
      Object {
        "charisma": -1,
        "constitution": -1,
        "dexterity": -1,
        "intelligence": -1,
        "strength": -1,
        "wisdom": -1,
      }
    }
    path="character.statistics"
    setState={[Function]}
    statistics={Array []}
  >
    <StatsBlock
      bare={
        Object {
          "charisma": 12,
          "constitution": 12,
          "dexterity": 12,
          "intelligence": 12,
          "strength": 12,
          "wisdom": 12,
        }
      }
      base={
        Object {
          "charisma": 12,
          "constitution": 12,
          "dexterity": 12,
          "intelligence": 12,
          "strength": 12,
          "wisdom": 12,
        }
      }
      bonus={
        Object {
          "charisma": Array [
            1,
            2,
          ],
          "constitution": Array [
            1,
            2,
          ],
          "dexterity": Array [
            1,
            2,
          ],
          "intelligence": Array [
            1,
            2,
          ],
          "strength": Array [
            1,
            2,
          ],
          "wisdom": Array [
            1,
            2,
          ],
        }
      }
      budget={27}
      editBase={false}
      increase={0}
      manualChange={[Function]}
      maxBare={15}
      minBare={8}
      modifiers={
        Object {
          "charisma": -1,
          "constitution": -1,
          "dexterity": -1,
          "intelligence": -1,
          "strength": -1,
          "wisdom": -1,
        }
      }
      path="character.statistics"
      setState={[Function]}
      statistics={Array []}
    >
      <table
        className="nice-table stats-block condensed bordered"
      >
        <Header
          increase={0}
          showBonus={true}
          showFinal={true}
        >
          <thead>
            <tr>
              <th>
                Statistic
              </th>
              <th
                className="text-align-center"
              >
                Base
              </th>
              <th
                className="text-align-center"
              >
                Bonus
              </th>
              <th
                className="text-align-center"
              >
                Final
              </th>
              <th
                className="text-align-center"
              >
                Modifier
              </th>
            </tr>
          </thead>
        </Header>
        <tbody />
        <Footer
          bonus={0}
          budget={27}
          increase={0}
          showBonus={true}
          showFinal={true}
          spent={0}
        >
          <tfoot>
            <tr
              className="text-align-center"
              key="budget"
            >
              <th>
                Budget
              </th>
              <td>
                27
              </td>
              <td
                colSpan={3}
              />
            </tr>
          </tfoot>
        </Footer>
      </table>
    </StatsBlock>
  </ListDataStatsBlock>
</StatisticsSelect>
`;
