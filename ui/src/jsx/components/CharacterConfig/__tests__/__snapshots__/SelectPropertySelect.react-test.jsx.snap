// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component: SelectPropertySelect should not render anything 1`] = `
<SelectPropertySelect
  current="charisma"
  hidden={true}
  items={
    Array [
      Object {
        "description": "Str",
        "id": "strength",
        "name": "Strength",
        "type": "statistics",
      },
      Object {
        "description": "Dex",
        "id": "dexterity",
        "name": "Dexterity",
        "type": "statistics",
      },
      Object {
        "description": "Con",
        "id": "constitution",
        "name": "Constitution",
        "type": "statistics",
      },
      Object {
        "description": "Int",
        "id": "intelligence",
        "name": "Intelligence",
        "type": "statistics",
      },
      Object {
        "description": "Wis",
        "id": "wisdom",
        "name": "Wisdom",
        "type": "statistics",
      },
      Object {
        "description": "Char",
        "id": "charisma",
        "name": "Charisma",
        "type": "statistics",
      },
    ]
  }
  path="some.path"
  setState={[Function]}
  type="select"
  uuid="mocked-uuid-1"
/>
`;

exports[`Component: SelectPropertySelect should render the list 1`] = `
<SelectPropertySelect
  current="charisma"
  items={
    Array [
      Object {
        "description": "Str",
        "id": "strength",
        "name": "Strength",
        "type": "statistics",
      },
      Object {
        "description": "Dex",
        "id": "dexterity",
        "name": "Dexterity",
        "type": "statistics",
      },
      Object {
        "description": "Con",
        "id": "constitution",
        "name": "Constitution",
        "type": "statistics",
      },
      Object {
        "description": "Int",
        "id": "intelligence",
        "name": "Intelligence",
        "type": "statistics",
      },
      Object {
        "description": "Wis",
        "id": "wisdom",
        "name": "Wisdom",
        "type": "statistics",
      },
      Object {
        "description": "Char",
        "id": "charisma",
        "name": "Charisma",
        "type": "statistics",
      },
    ]
  }
  path="some.path"
  setState={[Function]}
  type="select"
  uuid="mocked-uuid-1"
>
  <SingleSelect
    className="small"
    defaultValue={null}
    emptyLabel="Please select"
    isDisabled={[Function]}
    items={
      Array [
        Object {
          "description": "Str",
          "id": "strength",
          "name": "Strength",
          "type": "statistics",
        },
        Object {
          "description": "Dex",
          "id": "dexterity",
          "name": "Dexterity",
          "type": "statistics",
        },
        Object {
          "description": "Con",
          "id": "constitution",
          "name": "Constitution",
          "type": "statistics",
        },
        Object {
          "description": "Int",
          "id": "intelligence",
          "name": "Intelligence",
          "type": "statistics",
        },
        Object {
          "description": "Wis",
          "id": "wisdom",
          "name": "Wisdom",
          "type": "statistics",
        },
        Object {
          "description": "Char",
          "id": "charisma",
          "name": "Charisma",
          "type": "statistics",
        },
      ]
    }
    renderEmpty={null}
    selected="charisma"
    setState={[Function]}
  >
    <OnClickOutside(BaseSelect)
      className="small"
      eventTypes={
        Array [
          "mousedown",
          "touchstart",
        ]
      }
      excludeScrollbar={false}
      label="Charisma"
      outsideClickIgnoreClass="ignore-react-onclickoutside"
      preventDefault={false}
      stopPropagation={false}
    >
      <BaseSelect
        className="small"
        closeOnClick={true}
        description={null}
        disableOnClickOutside={[Function]}
        disabled={false}
        enableOnClickOutside={[Function]}
        eventTypes={
          Array [
            "mousedown",
            "touchstart",
          ]
        }
        heading={null}
        label="Charisma"
        outsideClickIgnoreClass="ignore-react-onclickoutside"
        preventDefault={false}
        stopPropagation={false}
      >
        <div
          className="nice-dropdown nice-form-control small"
        >
          <SelectButton
            disabled={false}
            label="Charisma"
            onToggle={[Function]}
          >
            <button
              className="nice-btn"
              disabled={false}
              onClick={[Function]}
            >
              Charisma
              <i
                className="icon fa-angle-down"
              />
            </button>
          </SelectButton>
          <ul
            className="dropdown-menu"
            onClick={[Function]}
          >
            <SelectItem
              disabled={false}
              id="strength"
              key="strength"
              name="Strength"
              onClick={[Function]}
              selected={false}
            >
              <li
                className={null}
                data-value="strength"
                onClick={[Function]}
              >
                <a>
                  Strength
                </a>
              </li>
            </SelectItem>
            <SelectItem
              disabled={false}
              id="dexterity"
              key="dexterity"
              name="Dexterity"
              onClick={[Function]}
              selected={false}
            >
              <li
                className={null}
                data-value="dexterity"
                onClick={[Function]}
              >
                <a>
                  Dexterity
                </a>
              </li>
            </SelectItem>
            <SelectItem
              disabled={false}
              id="constitution"
              key="constitution"
              name="Constitution"
              onClick={[Function]}
              selected={false}
            >
              <li
                className={null}
                data-value="constitution"
                onClick={[Function]}
              >
                <a>
                  Constitution
                </a>
              </li>
            </SelectItem>
            <SelectItem
              disabled={false}
              id="intelligence"
              key="intelligence"
              name="Intelligence"
              onClick={[Function]}
              selected={false}
            >
              <li
                className={null}
                data-value="intelligence"
                onClick={[Function]}
              >
                <a>
                  Intelligence
                </a>
              </li>
            </SelectItem>
            <SelectItem
              disabled={false}
              id="wisdom"
              key="wisdom"
              name="Wisdom"
              onClick={[Function]}
              selected={false}
            >
              <li
                className={null}
                data-value="wisdom"
                onClick={[Function]}
              >
                <a>
                  Wisdom
                </a>
              </li>
            </SelectItem>
            <SelectItem
              disabled={false}
              id="charisma"
              key="charisma"
              name="Charisma"
              onClick={[Function]}
              selected={true}
            >
              <li
                className="info"
                data-value="charisma"
                onClick={[Function]}
              >
                <a>
                  Charisma
                </a>
              </li>
            </SelectItem>
          </ul>
        </div>
      </BaseSelect>
    </OnClickOutside(BaseSelect)>
  </SingleSelect>
</SelectPropertySelect>
`;
