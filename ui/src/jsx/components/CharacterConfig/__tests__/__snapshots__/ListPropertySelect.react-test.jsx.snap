// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component: ListPropertySelect should not render select w/ filtering all items 1`] = `
<ListPropertySelect
  add={1}
  added={Array []}
  current={
    Array [
      "dexterity",
    ]
  }
  filter={
    Object {
      "id": Array [
        "impossible",
      ],
    }
  }
  given={Array []}
  hidden={false}
  items={
    Array [
      Object {
        "description": "Str",
        "id": "strength",
        "name": "Strength",
        "type": "statistics",
      },
      Object {
        "description": "Dex",
        "id": "dexterity",
        "name": "Dexterity",
        "type": "statistics",
      },
      Object {
        "description": "Con",
        "id": "constitution",
        "name": "Constitution",
        "type": "statistics",
      },
      Object {
        "description": "Int",
        "id": "intelligence",
        "name": "Intelligence",
        "type": "statistics",
      },
      Object {
        "description": "Wis",
        "id": "wisdom",
        "name": "Wisdom",
        "type": "statistics",
      },
      Object {
        "description": "Char",
        "id": "charisma",
        "name": "Charisma",
        "type": "statistics",
      },
    ]
  }
  limit={0}
  list={
    Array [
      "statistics",
    ]
  }
  multiple={false}
  objectlist={false}
  path="some.path"
  removed={Array []}
  replace={0}
  setState={[Function]}
  type="list"
  uuid="mocked-uuid-1"
>
  <BaseTagContainer>
    <div
      className="base-tag-container nice-tags-container"
    >
      <Tag
        badges={Array []}
        className={null}
        color={null}
        description="Dex"
        disabled={true}
        id="dexterity"
        key="tag-statistics-dexterity"
        label={null}
        name="Dexterity"
        onChange={null}
        onDelete={[Function]}
        type="statistics"
      >
        <div
          className="nice-tag muted"
        >
          <TagLabel>
            <span
              className="nice-tag-label"
            >
              <ToolTip
                content="Dex"
              >
                <div
                  className="tool-tip inline"
                >
                  Dexterity
                  <MDReactComponent
                    className="tool-tip--content"
                    text="Dex"
                  >
                    <span
                      className="tool-tip--content"
                      key="mdrct-html-0"
                    >
                      <p
                        key="mdrct-p-0"
                      >
                        Dex
                      </p>
                    </span>
                  </MDReactComponent>
                </div>
              </ToolTip>
            </span>
          </TagLabel>
        </div>
      </Tag>
    </div>
  </BaseTagContainer>
</ListPropertySelect>
`;

exports[`Component: ListPropertySelect should not render select w/o items 1`] = `
<ListPropertySelect
  add={1}
  added={Array []}
  current={
    Array [
      "dexterity",
    ]
  }
  filter={Object {}}
  given={Array []}
  hidden={false}
  items={Array []}
  limit={0}
  list={
    Array [
      "statistics",
    ]
  }
  multiple={false}
  objectlist={false}
  path="some.path"
  removed={Array []}
  replace={0}
  setState={[Function]}
  type="list"
  uuid="mocked-uuid-1"
>
  <BaseTagContainer>
    <div
      className="base-tag-container nice-tags-container"
    >
      <Tag
        badges={Array []}
        className={null}
        color={null}
        count={1}
        description={null}
        disabled={true}
        id="dexterity"
        key="tag-undefined-dexterity"
        label={null}
        name="dexterity"
        onChange={null}
        onDelete={[Function]}
      >
        <div
          className="nice-tag muted"
        >
          <TagLabel>
            <span
              className="nice-tag-label"
            >
              <ToolTip
                content={null}
              >
                dexterity
              </ToolTip>
            </span>
          </TagLabel>
        </div>
      </Tag>
    </div>
  </BaseTagContainer>
</ListPropertySelect>
`;

exports[`Component: ListPropertySelect should not render when hidden 1`] = `
<ListPropertySelect
  add={0}
  added={Array []}
  current={
    Array [
      "dexterity",
    ]
  }
  filter={Object {}}
  given={Array []}
  hidden={true}
  items={
    Array [
      Object {
        "description": "Str",
        "id": "strength",
        "name": "Strength",
        "type": "statistics",
      },
      Object {
        "description": "Dex",
        "id": "dexterity",
        "name": "Dexterity",
        "type": "statistics",
      },
      Object {
        "description": "Con",
        "id": "constitution",
        "name": "Constitution",
        "type": "statistics",
      },
      Object {
        "description": "Int",
        "id": "intelligence",
        "name": "Intelligence",
        "type": "statistics",
      },
      Object {
        "description": "Wis",
        "id": "wisdom",
        "name": "Wisdom",
        "type": "statistics",
      },
      Object {
        "description": "Char",
        "id": "charisma",
        "name": "Charisma",
        "type": "statistics",
      },
    ]
  }
  limit={0}
  list={
    Array [
      "statistics",
    ]
  }
  multiple={false}
  objectlist={false}
  path="some.path"
  removed={Array []}
  replace={0}
  setState={[Function]}
  type="list"
  uuid="mocked-uuid-1"
/>
`;

exports[`Component: ListPropertySelect should render with full props 1`] = `
<ListPropertySelect
  add={2}
  added={Array []}
  current={
    Array [
      "constitution",
      "charisma",
      "dexterity",
    ]
  }
  filter={
    Object {
      "id": Array [
        "strength",
        "charisma",
        "intelligence",
      ],
      "some_formula": "blah blah",
    }
  }
  given={
    Array [
      "constitution",
      "charisma",
    ]
  }
  hidden={false}
  items={
    Array [
      Object {
        "description": "Str",
        "id": "strength",
        "name": "Strength",
        "type": "statistics",
      },
      Object {
        "description": "Dex",
        "id": "dexterity",
        "name": "Dexterity",
        "type": "statistics",
      },
      Object {
        "description": "Con",
        "id": "constitution",
        "name": "Constitution",
        "type": "statistics",
      },
      Object {
        "description": "Int",
        "id": "intelligence",
        "name": "Intelligence",
        "type": "statistics",
      },
      Object {
        "description": "Wis",
        "id": "wisdom",
        "name": "Wisdom",
        "type": "statistics",
      },
      Object {
        "description": "Char",
        "id": "charisma",
        "name": "Charisma",
        "type": "statistics",
      },
    ]
  }
  limit={0}
  list={
    Array [
      "statistics",
    ]
  }
  multiple={true}
  objectlist={false}
  path="some.path"
  removed={Array []}
  replace={1}
  setState={[Function]}
  type="list"
  uuid="mocked-uuid-1"
>
  <BaseTagContainer>
    <div
      className="base-tag-container nice-tags-container"
    >
      <SingleSelect
        defaultValue={null}
        emptyLabel="Add..."
        isDisabled={[Function]}
        items={
          Array [
            Object {
              "description": "Str",
              "id": "strength",
              "name": "Strength",
              "type": "statistics",
            },
            Object {
              "description": "Int",
              "id": "intelligence",
              "name": "Intelligence",
              "type": "statistics",
            },
            Object {
              "description": "Char",
              "id": "charisma",
              "name": "Charisma",
              "type": "statistics",
            },
          ]
        }
        objects={false}
        renderEmpty={null}
        selected={null}
        setState={[Function]}
      >
        <OnClickOutside(BaseSelect)
          eventTypes={
            Array [
              "mousedown",
              "touchstart",
            ]
          }
          excludeScrollbar={false}
          label="Add..."
          outsideClickIgnoreClass="ignore-react-onclickoutside"
          preventDefault={false}
          stopPropagation={false}
        >
          <BaseSelect
            className={null}
            closeOnClick={true}
            description={null}
            disableOnClickOutside={[Function]}
            disabled={false}
            enableOnClickOutside={[Function]}
            eventTypes={
              Array [
                "mousedown",
                "touchstart",
              ]
            }
            heading={null}
            label="Add..."
            outsideClickIgnoreClass="ignore-react-onclickoutside"
            preventDefault={false}
            stopPropagation={false}
          >
            <div
              className="nice-dropdown nice-form-control"
            >
              <SelectButton
                disabled={false}
                label="Add..."
                onToggle={[Function]}
              >
                <button
                  className="nice-btn"
                  disabled={false}
                  onClick={[Function]}
                >
                  Add...
                  <i
                    className="icon fa-angle-down"
                  />
                </button>
              </SelectButton>
              <ul
                className="dropdown-menu"
                onClick={[Function]}
              >
                <SelectItem
                  disabled={false}
                  id="strength"
                  key="strength"
                  name="Strength"
                  onClick={[Function]}
                  selected={false}
                >
                  <li
                    className={null}
                    data-value="strength"
                    onClick={[Function]}
                  >
                    <a>
                      Strength
                    </a>
                  </li>
                </SelectItem>
                <SelectItem
                  disabled={false}
                  id="intelligence"
                  key="intelligence"
                  name="Intelligence"
                  onClick={[Function]}
                  selected={false}
                >
                  <li
                    className={null}
                    data-value="intelligence"
                    onClick={[Function]}
                  >
                    <a>
                      Intelligence
                    </a>
                  </li>
                </SelectItem>
                <SelectItem
                  disabled={false}
                  id="charisma"
                  key="charisma"
                  name="Charisma"
                  onClick={[Function]}
                  selected={false}
                >
                  <li
                    className={null}
                    data-value="charisma"
                    onClick={[Function]}
                  >
                    <a>
                      Charisma
                    </a>
                  </li>
                </SelectItem>
              </ul>
            </div>
          </BaseSelect>
        </OnClickOutside(BaseSelect)>
      </SingleSelect>
      <Tag
        badges={Array []}
        className={null}
        color="good"
        description="Con"
        disabled={true}
        id="constitution"
        key="tag-statistics-constitution"
        label={null}
        name="Constitution"
        onChange={null}
        onDelete={[Function]}
        type="statistics"
      >
        <div
          className="nice-tag good"
        >
          <TagLabel>
            <span
              className="nice-tag-label"
            >
              <ToolTip
                content="Con"
              >
                <div
                  className="tool-tip inline"
                >
                  Constitution
                  <MDReactComponent
                    className="tool-tip--content"
                    text="Con"
                  >
                    <span
                      className="tool-tip--content"
                      key="mdrct-html-0"
                    >
                      <p
                        key="mdrct-p-0"
                      >
                        Con
                      </p>
                    </span>
                  </MDReactComponent>
                </div>
              </ToolTip>
            </span>
          </TagLabel>
        </div>
      </Tag>
      <Tag
        badges={Array []}
        className={null}
        color="good"
        description="Char"
        disabled={true}
        id="charisma"
        key="tag-statistics-charisma"
        label={null}
        name="Charisma"
        onChange={null}
        onDelete={[Function]}
        type="statistics"
      >
        <div
          className="nice-tag good"
        >
          <TagLabel>
            <span
              className="nice-tag-label"
            >
              <ToolTip
                content="Char"
              >
                <div
                  className="tool-tip inline"
                >
                  Charisma
                  <MDReactComponent
                    className="tool-tip--content"
                    text="Char"
                  >
                    <span
                      className="tool-tip--content"
                      key="mdrct-html-0"
                    >
                      <p
                        key="mdrct-p-0"
                      >
                        Char
                      </p>
                    </span>
                  </MDReactComponent>
                </div>
              </ToolTip>
            </span>
          </TagLabel>
        </div>
      </Tag>
      <Tag
        badges={Array []}
        className={null}
        color="warning"
        description="Dex"
        disabled={false}
        id="dexterity"
        key="tag-statistics-dexterity"
        label={null}
        name="Dexterity"
        onChange={null}
        onDelete={[Function]}
        type="statistics"
      >
        <div
          className="nice-tag warning"
        >
          <TagLabel>
            <span
              className="nice-tag-label"
            >
              <ToolTip
                content="Dex"
              >
                <div
                  className="tool-tip inline"
                >
                  Dexterity
                  <MDReactComponent
                    className="tool-tip--content"
                    text="Dex"
                  >
                    <span
                      className="tool-tip--content"
                      key="mdrct-html-0"
                    >
                      <p
                        key="mdrct-p-0"
                      >
                        Dex
                      </p>
                    </span>
                  </MDReactComponent>
                </div>
              </ToolTip>
            </span>
          </TagLabel>
          <TagButton
            icon="fa-trash-o"
            label={null}
            onClick={[Function]}
          >
            <button
              className="nice-tag-btn"
              onClick={[Function]}
            >
              <i
                className="icon fa-trash-o"
              />
            </button>
          </TagButton>
        </div>
      </Tag>
    </div>
  </BaseTagContainer>
</ListPropertySelect>
`;

exports[`Component: ListPropertySelect should render with minimum props 1`] = `
<ListPropertySelect
  add={0}
  added={Array []}
  current={Array []}
  filter={Object {}}
  given={Array []}
  hidden={false}
  items={Array []}
  limit={0}
  multiple={false}
  objectlist={false}
  removed={Array []}
  replace={0}
  setState={[Function]}
  type="list"
  uuid="mocked-uuid-1"
>
  <BaseTagContainer>
    <div
      className="base-tag-container nice-tags-container"
    />
  </BaseTagContainer>
</ListPropertySelect>
`;

exports[`Component: ListPropertySelect should stil show unknown current values 1`] = `
<ListPropertySelect
  add={0}
  added={Array []}
  current={
    Array [
      "foo",
      "dexterity",
    ]
  }
  filter={Object {}}
  given={
    Array [
      "foo",
    ]
  }
  hidden={false}
  items={
    Array [
      Object {
        "description": "Str",
        "id": "strength",
        "name": "Strength",
        "type": "statistics",
      },
      Object {
        "description": "Dex",
        "id": "dexterity",
        "name": "Dexterity",
        "type": "statistics",
      },
      Object {
        "description": "Con",
        "id": "constitution",
        "name": "Constitution",
        "type": "statistics",
      },
      Object {
        "description": "Int",
        "id": "intelligence",
        "name": "Intelligence",
        "type": "statistics",
      },
      Object {
        "description": "Wis",
        "id": "wisdom",
        "name": "Wisdom",
        "type": "statistics",
      },
      Object {
        "description": "Char",
        "id": "charisma",
        "name": "Charisma",
        "type": "statistics",
      },
    ]
  }
  limit={0}
  list={
    Array [
      "statistics",
    ]
  }
  multiple={false}
  objectlist={false}
  path="some.path"
  removed={Array []}
  replace={0}
  setState={[Function]}
  type="list"
  uuid="mocked-uuid-1"
>
  <BaseTagContainer>
    <div
      className="base-tag-container nice-tags-container"
    >
      <Tag
        badges={Array []}
        className={null}
        color="good"
        count={1}
        description={null}
        disabled={true}
        id="foo"
        key="tag-undefined-foo"
        label={null}
        name="foo"
        onChange={null}
        onDelete={[Function]}
      >
        <div
          className="nice-tag good"
        >
          <TagLabel>
            <span
              className="nice-tag-label"
            >
              <ToolTip
                content={null}
              >
                foo
              </ToolTip>
            </span>
          </TagLabel>
        </div>
      </Tag>
      <Tag
        badges={Array []}
        className={null}
        color={null}
        description="Dex"
        disabled={true}
        id="dexterity"
        key="tag-statistics-dexterity"
        label={null}
        name="Dexterity"
        onChange={null}
        onDelete={[Function]}
        type="statistics"
      >
        <div
          className="nice-tag muted"
        >
          <TagLabel>
            <span
              className="nice-tag-label"
            >
              <ToolTip
                content="Dex"
              >
                <div
                  className="tool-tip inline"
                >
                  Dexterity
                  <MDReactComponent
                    className="tool-tip--content"
                    text="Dex"
                  >
                    <span
                      className="tool-tip--content"
                      key="mdrct-html-0"
                    >
                      <p
                        key="mdrct-p-0"
                      >
                        Dex
                      </p>
                    </span>
                  </MDReactComponent>
                </div>
              </ToolTip>
            </span>
          </TagLabel>
        </div>
      </Tag>
    </div>
  </BaseTagContainer>
</ListPropertySelect>
`;
