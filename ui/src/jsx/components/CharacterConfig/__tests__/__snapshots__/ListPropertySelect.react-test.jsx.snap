// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component: ListPropertySelect should allow replacing one existing 1`] = `
<ListsToItemsCharacterEditorComponent
  filter={
    Object {
      "code": Array [
        "strength",
      ],
    }
  }
  given={
    Array [
      "charisma",
    ]
  }
  list={
    Array [
      "statistics",
    ]
  }
  path="some.path"
  replace={1}
  type="list"
>
  <CharacterEditorComponent
    filter={
      Object {
        "code": Array [
          "strength",
        ],
      }
    }
    given={
      Array [
        "charisma",
      ]
    }
    items={
      Array [
        Object {
          "code": "strength",
          "description": "Str",
          "label": "Strength",
        },
        Object {
          "code": "dexterity",
          "description": "Dex",
          "label": "Dexterity",
        },
        Object {
          "code": "constitution",
          "description": "Con",
          "label": "Constitution",
        },
        Object {
          "code": "intelligence",
          "description": "Int",
          "label": "Intelligence",
        },
        Object {
          "code": "wisdom",
          "description": "Wis",
          "label": "Wisdom",
        },
        Object {
          "code": "charisma",
          "description": "Char",
          "label": "Charisma",
        },
      ]
    }
    path="some.path"
    replace={1}
    type="list"
  >
    <ListPropertySelect
      add={0}
      current={
        Array [
          "charisma",
        ]
      }
      filter={
        Object {
          "code": Array [
            "strength",
          ],
        }
      }
      getCurrent={[Function]}
      given={
        Array [
          "charisma",
        ]
      }
      items={
        Array [
          Object {
            "code": "strength",
            "description": "Str",
            "label": "Strength",
          },
          Object {
            "code": "dexterity",
            "description": "Dex",
            "label": "Dexterity",
          },
          Object {
            "code": "constitution",
            "description": "Con",
            "label": "Constitution",
          },
          Object {
            "code": "intelligence",
            "description": "Int",
            "label": "Intelligence",
          },
          Object {
            "code": "wisdom",
            "description": "Wis",
            "label": "Wisdom",
          },
          Object {
            "code": "charisma",
            "description": "Char",
            "label": "Charisma",
          },
        ]
      }
      limit={0}
      multiple={false}
      onChange={[Function]}
      onSave={[Function]}
      onUpdate={[Function]}
      replace={1}
      type="list"
    >
      <TagsContainer>
        <div
          className="base-tag-container nice-tags-container"
        >
          <SingleSelect
            defaultValue={null}
            emptyLabel="Add..."
            isDisabled={[Function]}
            items={
              Array [
                Object {
                  "code": "strength",
                  "description": "Str",
                  "label": "Strength",
                },
                Object {
                  "code": "dexterity",
                  "description": "Dex",
                  "label": "Dexterity",
                },
              ]
            }
            renderEmpty={null}
            selected={null}
            setState={[Function]}
          >
            <OnClickOutside(BaseSelect)
              eventTypes={
                Array [
                  "mousedown",
                  "touchstart",
                ]
              }
              excludeScrollbar={false}
              label="Add..."
              outsideClickIgnoreClass="ignore-react-onclickoutside"
              preventDefault={false}
              stopPropagation={false}
            >
              <BaseSelect
                className={null}
                closeOnClick={true}
                description={null}
                disableOnClickOutside={[Function]}
                enableOnClickOutside={[Function]}
                eventTypes={
                  Array [
                    "mousedown",
                    "touchstart",
                  ]
                }
                heading={null}
                label="Add..."
                outsideClickIgnoreClass="ignore-react-onclickoutside"
                preventDefault={false}
                stopPropagation={false}
              >
                <div
                  className="nice-dropdown nice-form-control"
                >
                  <SelectButton
                    label="Add..."
                    onToggle={[Function]}
                  >
                    <button
                      className="nice-btn"
                      onClick={[Function]}
                    >
                      Add...
                      <i
                        className="icon fa-angle-down"
                      />
                    </button>
                  </SelectButton>
                  <ul
                    className="dropdown-menu"
                    onClick={[Function]}
                  >
                    <SelectItem
                      disabled={false}
                      id="strength"
                      key="strength"
                      label="Strength"
                      onClick={[Function]}
                      selected={false}
                    >
                      <li
                        className={null}
                        data-value="strength"
                        onClick={[Function]}
                      >
                        <a>
                          Strength
                        </a>
                      </li>
                    </SelectItem>
                    <SelectItem
                      disabled={false}
                      id="dexterity"
                      key="dexterity"
                      label="Dexterity"
                      onClick={[Function]}
                      selected={false}
                    >
                      <li
                        className={null}
                        data-value="dexterity"
                        onClick={[Function]}
                      >
                        <a>
                          Dexterity
                        </a>
                      </li>
                    </SelectItem>
                  </ul>
                </div>
              </BaseSelect>
            </OnClickOutside(BaseSelect)>
          </SingleSelect>
          <Tag
            color="good"
            description="Char"
            disabled={true}
            id="charisma"
            key="tag-0"
            label="Charisma"
            onDelete={[Function]}
          >
            <div
              className="nice-tag good"
            >
              <span
                className="nice-tag-label"
              >
                <ToolTip
                  content="Char"
                >
                  <div
                    className="tool-tip inline"
                  >
                    Charisma
                    <MDReactComponent
                      className="tool-tip--content"
                      text="Char"
                    >
                      <span
                        className="tool-tip--content"
                        key="mdrct-html-0"
                      >
                        <p
                          key="mdrct-p-0"
                        >
                          Char
                        </p>
                      </span>
                    </MDReactComponent>
                  </div>
                </ToolTip>
              </span>
            </div>
          </Tag>
        </div>
      </TagsContainer>
    </ListPropertySelect>
  </CharacterEditorComponent>
</ListsToItemsCharacterEditorComponent>
`;

exports[`Component: ListPropertySelect should allow replacing one existing 2`] = `
<ListsToItemsCharacterEditorComponent
  filter={
    Object {
      "code": Array [
        "strength",
      ],
    }
  }
  given={
    Array [
      "charisma",
    ]
  }
  list={
    Array [
      "statistics",
    ]
  }
  path="some.path"
  replace={1}
  type="list"
>
  <CharacterEditorComponent
    filter={
      Object {
        "code": Array [
          "strength",
        ],
      }
    }
    given={
      Array [
        "charisma",
      ]
    }
    items={
      Array [
        Object {
          "code": "strength",
          "description": "Str",
          "label": "Strength",
        },
        Object {
          "code": "dexterity",
          "description": "Dex",
          "label": "Dexterity",
        },
        Object {
          "code": "constitution",
          "description": "Con",
          "label": "Constitution",
        },
        Object {
          "code": "intelligence",
          "description": "Int",
          "label": "Intelligence",
        },
        Object {
          "code": "wisdom",
          "description": "Wis",
          "label": "Wisdom",
        },
        Object {
          "code": "charisma",
          "description": "Char",
          "label": "Charisma",
        },
      ]
    }
    path="some.path"
    replace={1}
    type="list"
  >
    <ListPropertySelect
      add={0}
      current={
        Array [
          "strength",
          "charisma",
        ]
      }
      filter={
        Object {
          "code": Array [
            "strength",
          ],
        }
      }
      getCurrent={[Function]}
      given={
        Array [
          "charisma",
        ]
      }
      items={
        Array [
          Object {
            "code": "strength",
            "description": "Str",
            "label": "Strength",
          },
          Object {
            "code": "dexterity",
            "description": "Dex",
            "label": "Dexterity",
          },
          Object {
            "code": "constitution",
            "description": "Con",
            "label": "Constitution",
          },
          Object {
            "code": "intelligence",
            "description": "Int",
            "label": "Intelligence",
          },
          Object {
            "code": "wisdom",
            "description": "Wis",
            "label": "Wisdom",
          },
          Object {
            "code": "charisma",
            "description": "Char",
            "label": "Charisma",
          },
        ]
      }
      limit={0}
      multiple={false}
      onChange={[Function]}
      onSave={[Function]}
      onUpdate={[Function]}
      replace={1}
      type="list"
    >
      <TagsContainer>
        <div
          className="base-tag-container nice-tags-container"
        >
          <Tag
            color="info"
            description="Str"
            id="strength"
            key="tag-0"
            label="Strength"
            onDelete={[Function]}
          >
            <div
              className="nice-tag info"
            >
              <span
                className="nice-tag-label"
              >
                <ToolTip
                  content="Str"
                >
                  <div
                    className="tool-tip inline"
                  >
                    Strength
                    <MDReactComponent
                      className="tool-tip--content"
                      text="Str"
                    >
                      <span
                        className="tool-tip--content"
                        key="mdrct-html-0"
                      >
                        <p
                          key="mdrct-p-0"
                        >
                          Str
                        </p>
                      </span>
                    </MDReactComponent>
                  </div>
                </ToolTip>
              </span>
              <TagBadgeButton
                icon="fa-trash-o"
                onClick={[Function]}
              >
                <button
                  className="nice-tag-btn"
                  onClick={[Function]}
                >
                  <i
                    className="icon fa-trash-o"
                  />
                </button>
              </TagBadgeButton>
            </div>
          </Tag>
          <Tag
            color="good"
            description="Char"
            disabled={true}
            id="charisma"
            key="tag-1"
            label="Charisma"
            onDelete={[Function]}
          >
            <div
              className="nice-tag good"
            >
              <span
                className="nice-tag-label"
              >
                <ToolTip
                  content="Char"
                >
                  <div
                    className="tool-tip inline"
                  >
                    Charisma
                    <MDReactComponent
                      className="tool-tip--content"
                      text="Char"
                    >
                      <span
                        className="tool-tip--content"
                        key="mdrct-html-0"
                      >
                        <p
                          key="mdrct-p-0"
                        >
                          Char
                        </p>
                      </span>
                    </MDReactComponent>
                  </div>
                </ToolTip>
              </span>
            </div>
          </Tag>
        </div>
      </TagsContainer>
    </ListPropertySelect>
  </CharacterEditorComponent>
</ListsToItemsCharacterEditorComponent>
`;

exports[`Component: ListPropertySelect should handle adding and deleting new 1`] = `
<ListsToItemsCharacterEditorComponent
  add={1}
  given={
    Array [
      "charisma",
    ]
  }
  list={
    Array [
      "statistics",
    ]
  }
  path="some.path"
  type="list"
>
  <CharacterEditorComponent
    add={1}
    given={
      Array [
        "charisma",
      ]
    }
    items={
      Array [
        Object {
          "code": "strength",
          "description": "Str",
          "label": "Strength",
        },
        Object {
          "code": "dexterity",
          "description": "Dex",
          "label": "Dexterity",
        },
        Object {
          "code": "constitution",
          "description": "Con",
          "label": "Constitution",
        },
        Object {
          "code": "intelligence",
          "description": "Int",
          "label": "Intelligence",
        },
        Object {
          "code": "wisdom",
          "description": "Wis",
          "label": "Wisdom",
        },
        Object {
          "code": "charisma",
          "description": "Char",
          "label": "Charisma",
        },
      ]
    }
    path="some.path"
    type="list"
  >
    <ListPropertySelect
      add={1}
      current={
        Array [
          "dexterity",
          "charisma",
        ]
      }
      filter={Object {}}
      getCurrent={[Function]}
      given={
        Array [
          "charisma",
        ]
      }
      items={
        Array [
          Object {
            "code": "strength",
            "description": "Str",
            "label": "Strength",
          },
          Object {
            "code": "dexterity",
            "description": "Dex",
            "label": "Dexterity",
          },
          Object {
            "code": "constitution",
            "description": "Con",
            "label": "Constitution",
          },
          Object {
            "code": "intelligence",
            "description": "Int",
            "label": "Intelligence",
          },
          Object {
            "code": "wisdom",
            "description": "Wis",
            "label": "Wisdom",
          },
          Object {
            "code": "charisma",
            "description": "Char",
            "label": "Charisma",
          },
        ]
      }
      limit={0}
      multiple={false}
      onChange={[Function]}
      onSave={[Function]}
      onUpdate={[Function]}
      replace={0}
      type="list"
    >
      <TagsContainer>
        <div
          className="base-tag-container nice-tags-container"
        >
          <SingleSelect
            defaultValue={null}
            emptyLabel="Add..."
            isDisabled={[Function]}
            items={
              Array [
                Object {
                  "code": "strength",
                  "description": "Str",
                  "label": "Strength",
                },
                Object {
                  "code": "constitution",
                  "description": "Con",
                  "label": "Constitution",
                },
                Object {
                  "code": "intelligence",
                  "description": "Int",
                  "label": "Intelligence",
                },
                Object {
                  "code": "wisdom",
                  "description": "Wis",
                  "label": "Wisdom",
                },
              ]
            }
            renderEmpty={null}
            selected={null}
            setState={[Function]}
          >
            <OnClickOutside(BaseSelect)
              eventTypes={
                Array [
                  "mousedown",
                  "touchstart",
                ]
              }
              excludeScrollbar={false}
              label="Add..."
              outsideClickIgnoreClass="ignore-react-onclickoutside"
              preventDefault={false}
              stopPropagation={false}
            >
              <BaseSelect
                className={null}
                closeOnClick={true}
                description={null}
                disableOnClickOutside={[Function]}
                enableOnClickOutside={[Function]}
                eventTypes={
                  Array [
                    "mousedown",
                    "touchstart",
                  ]
                }
                heading={null}
                label="Add..."
                outsideClickIgnoreClass="ignore-react-onclickoutside"
                preventDefault={false}
                stopPropagation={false}
              >
                <div
                  className="nice-dropdown nice-form-control"
                >
                  <SelectButton
                    label="Add..."
                    onToggle={[Function]}
                  >
                    <button
                      className="nice-btn"
                      onClick={[Function]}
                    >
                      Add...
                      <i
                        className="icon fa-angle-down"
                      />
                    </button>
                  </SelectButton>
                  <ul
                    className="dropdown-menu"
                    onClick={[Function]}
                  >
                    <SelectItem
                      disabled={false}
                      id="strength"
                      key="strength"
                      label="Strength"
                      onClick={[Function]}
                      selected={false}
                    >
                      <li
                        className={null}
                        data-value="strength"
                        onClick={[Function]}
                      >
                        <a>
                          Strength
                        </a>
                      </li>
                    </SelectItem>
                    <SelectItem
                      disabled={false}
                      id="constitution"
                      key="constitution"
                      label="Constitution"
                      onClick={[Function]}
                      selected={false}
                    >
                      <li
                        className={null}
                        data-value="constitution"
                        onClick={[Function]}
                      >
                        <a>
                          Constitution
                        </a>
                      </li>
                    </SelectItem>
                    <SelectItem
                      disabled={false}
                      id="intelligence"
                      key="intelligence"
                      label="Intelligence"
                      onClick={[Function]}
                      selected={false}
                    >
                      <li
                        className={null}
                        data-value="intelligence"
                        onClick={[Function]}
                      >
                        <a>
                          Intelligence
                        </a>
                      </li>
                    </SelectItem>
                    <SelectItem
                      disabled={false}
                      id="wisdom"
                      key="wisdom"
                      label="Wisdom"
                      onClick={[Function]}
                      selected={false}
                    >
                      <li
                        className={null}
                        data-value="wisdom"
                        onClick={[Function]}
                      >
                        <a>
                          Wisdom
                        </a>
                      </li>
                    </SelectItem>
                  </ul>
                </div>
              </BaseSelect>
            </OnClickOutside(BaseSelect)>
          </SingleSelect>
          <Tag
            color="good"
            description="Char"
            disabled={true}
            id="charisma"
            key="tag-0"
            label="Charisma"
            onDelete={[Function]}
          >
            <div
              className="nice-tag good"
            >
              <span
                className="nice-tag-label"
              >
                <ToolTip
                  content="Char"
                >
                  <div
                    className="tool-tip inline"
                  >
                    Charisma
                    <MDReactComponent
                      className="tool-tip--content"
                      text="Char"
                    >
                      <span
                        className="tool-tip--content"
                        key="mdrct-html-0"
                      >
                        <p
                          key="mdrct-p-0"
                        >
                          Char
                        </p>
                      </span>
                    </MDReactComponent>
                  </div>
                </ToolTip>
              </span>
            </div>
          </Tag>
          <Tag
            color={null}
            description="Dex"
            disabled={true}
            id="dexterity"
            key="tag-1"
            label="Dexterity"
            onDelete={[Function]}
          >
            <div
              className="nice-tag muted"
            >
              <span
                className="nice-tag-label"
              >
                <ToolTip
                  content="Dex"
                >
                  <div
                    className="tool-tip inline"
                  >
                    Dexterity
                    <MDReactComponent
                      className="tool-tip--content"
                      text="Dex"
                    >
                      <span
                        className="tool-tip--content"
                        key="mdrct-html-0"
                      >
                        <p
                          key="mdrct-p-0"
                        >
                          Dex
                        </p>
                      </span>
                    </MDReactComponent>
                  </div>
                </ToolTip>
              </span>
            </div>
          </Tag>
        </div>
      </TagsContainer>
    </ListPropertySelect>
  </CharacterEditorComponent>
</ListsToItemsCharacterEditorComponent>
`;

exports[`Component: ListPropertySelect should handle adding and deleting new 2`] = `
<ListsToItemsCharacterEditorComponent
  add={1}
  given={
    Array [
      "charisma",
    ]
  }
  list={
    Array [
      "statistics",
    ]
  }
  path="some.path"
  type="list"
>
  <CharacterEditorComponent
    add={1}
    given={
      Array [
        "charisma",
      ]
    }
    items={
      Array [
        Object {
          "code": "strength",
          "description": "Str",
          "label": "Strength",
        },
        Object {
          "code": "dexterity",
          "description": "Dex",
          "label": "Dexterity",
        },
        Object {
          "code": "constitution",
          "description": "Con",
          "label": "Constitution",
        },
        Object {
          "code": "intelligence",
          "description": "Int",
          "label": "Intelligence",
        },
        Object {
          "code": "wisdom",
          "description": "Wis",
          "label": "Wisdom",
        },
        Object {
          "code": "charisma",
          "description": "Char",
          "label": "Charisma",
        },
      ]
    }
    path="some.path"
    type="list"
  >
    <ListPropertySelect
      add={1}
      current={
        Array [
          "dexterity",
          "strength",
          "charisma",
        ]
      }
      filter={Object {}}
      getCurrent={[Function]}
      given={
        Array [
          "charisma",
        ]
      }
      items={
        Array [
          Object {
            "code": "strength",
            "description": "Str",
            "label": "Strength",
          },
          Object {
            "code": "dexterity",
            "description": "Dex",
            "label": "Dexterity",
          },
          Object {
            "code": "constitution",
            "description": "Con",
            "label": "Constitution",
          },
          Object {
            "code": "intelligence",
            "description": "Int",
            "label": "Intelligence",
          },
          Object {
            "code": "wisdom",
            "description": "Wis",
            "label": "Wisdom",
          },
          Object {
            "code": "charisma",
            "description": "Char",
            "label": "Charisma",
          },
        ]
      }
      limit={0}
      multiple={false}
      onChange={[Function]}
      onSave={[Function]}
      onUpdate={[Function]}
      replace={0}
      type="list"
    >
      <TagsContainer>
        <div
          className="base-tag-container nice-tags-container"
        >
          <Tag
            color="info"
            description="Str"
            id="strength"
            key="tag-0"
            label="Strength"
            onDelete={[Function]}
          >
            <div
              className="nice-tag info"
            >
              <span
                className="nice-tag-label"
              >
                <ToolTip
                  content="Str"
                >
                  <div
                    className="tool-tip inline"
                  >
                    Strength
                    <MDReactComponent
                      className="tool-tip--content"
                      text="Str"
                    >
                      <span
                        className="tool-tip--content"
                        key="mdrct-html-0"
                      >
                        <p
                          key="mdrct-p-0"
                        >
                          Str
                        </p>
                      </span>
                    </MDReactComponent>
                  </div>
                </ToolTip>
              </span>
              <TagBadgeButton
                icon="fa-trash-o"
                onClick={[Function]}
              >
                <button
                  className="nice-tag-btn"
                  onClick={[Function]}
                >
                  <i
                    className="icon fa-trash-o"
                  />
                </button>
              </TagBadgeButton>
            </div>
          </Tag>
          <Tag
            color="good"
            description="Char"
            disabled={true}
            id="charisma"
            key="tag-1"
            label="Charisma"
            onDelete={[Function]}
          >
            <div
              className="nice-tag good"
            >
              <span
                className="nice-tag-label"
              >
                <ToolTip
                  content="Char"
                >
                  <div
                    className="tool-tip inline"
                  >
                    Charisma
                    <MDReactComponent
                      className="tool-tip--content"
                      text="Char"
                    >
                      <span
                        className="tool-tip--content"
                        key="mdrct-html-0"
                      >
                        <p
                          key="mdrct-p-0"
                        >
                          Char
                        </p>
                      </span>
                    </MDReactComponent>
                  </div>
                </ToolTip>
              </span>
            </div>
          </Tag>
          <Tag
            color={null}
            description="Dex"
            disabled={true}
            id="dexterity"
            key="tag-2"
            label="Dexterity"
            onDelete={[Function]}
          >
            <div
              className="nice-tag muted"
            >
              <span
                className="nice-tag-label"
              >
                <ToolTip
                  content="Dex"
                >
                  <div
                    className="tool-tip inline"
                  >
                    Dexterity
                    <MDReactComponent
                      className="tool-tip--content"
                      text="Dex"
                    >
                      <span
                        className="tool-tip--content"
                        key="mdrct-html-0"
                      >
                        <p
                          key="mdrct-p-0"
                        >
                          Dex
                        </p>
                      </span>
                    </MDReactComponent>
                  </div>
                </ToolTip>
              </span>
            </div>
          </Tag>
        </div>
      </TagsContainer>
    </ListPropertySelect>
  </CharacterEditorComponent>
</ListsToItemsCharacterEditorComponent>
`;

exports[`Component: ListPropertySelect should handle adding and deleting new 3`] = `
<ListsToItemsCharacterEditorComponent
  add={1}
  given={
    Array [
      "charisma",
    ]
  }
  list={
    Array [
      "statistics",
    ]
  }
  path="some.path"
  type="list"
>
  <CharacterEditorComponent
    add={1}
    given={
      Array [
        "charisma",
      ]
    }
    items={
      Array [
        Object {
          "code": "strength",
          "description": "Str",
          "label": "Strength",
        },
        Object {
          "code": "dexterity",
          "description": "Dex",
          "label": "Dexterity",
        },
        Object {
          "code": "constitution",
          "description": "Con",
          "label": "Constitution",
        },
        Object {
          "code": "intelligence",
          "description": "Int",
          "label": "Intelligence",
        },
        Object {
          "code": "wisdom",
          "description": "Wis",
          "label": "Wisdom",
        },
        Object {
          "code": "charisma",
          "description": "Char",
          "label": "Charisma",
        },
      ]
    }
    path="some.path"
    type="list"
  >
    <ListPropertySelect
      add={1}
      current={
        Array [
          "dexterity",
          "strength",
          "charisma",
          "intelligence",
        ]
      }
      filter={Object {}}
      getCurrent={[Function]}
      given={
        Array [
          "charisma",
        ]
      }
      items={
        Array [
          Object {
            "code": "strength",
            "description": "Str",
            "label": "Strength",
          },
          Object {
            "code": "dexterity",
            "description": "Dex",
            "label": "Dexterity",
          },
          Object {
            "code": "constitution",
            "description": "Con",
            "label": "Constitution",
          },
          Object {
            "code": "intelligence",
            "description": "Int",
            "label": "Intelligence",
          },
          Object {
            "code": "wisdom",
            "description": "Wis",
            "label": "Wisdom",
          },
          Object {
            "code": "charisma",
            "description": "Char",
            "label": "Charisma",
          },
        ]
      }
      limit={0}
      multiple={false}
      onChange={[Function]}
      onSave={[Function]}
      onUpdate={[Function]}
      replace={0}
      type="list"
    >
      <TagsContainer>
        <div
          className="base-tag-container nice-tags-container"
        >
          <Tag
            color="info"
            description="Str"
            id="strength"
            key="tag-0"
            label="Strength"
            onDelete={[Function]}
          >
            <div
              className="nice-tag info"
            >
              <span
                className="nice-tag-label"
              >
                <ToolTip
                  content="Str"
                >
                  <div
                    className="tool-tip inline"
                  >
                    Strength
                    <MDReactComponent
                      className="tool-tip--content"
                      text="Str"
                    >
                      <span
                        className="tool-tip--content"
                        key="mdrct-html-0"
                      >
                        <p
                          key="mdrct-p-0"
                        >
                          Str
                        </p>
                      </span>
                    </MDReactComponent>
                  </div>
                </ToolTip>
              </span>
              <TagBadgeButton
                icon="fa-trash-o"
                onClick={[Function]}
              >
                <button
                  className="nice-tag-btn"
                  onClick={[Function]}
                >
                  <i
                    className="icon fa-trash-o"
                  />
                </button>
              </TagBadgeButton>
            </div>
          </Tag>
          <Tag
            color="good"
            description="Char"
            disabled={true}
            id="charisma"
            key="tag-1"
            label="Charisma"
            onDelete={[Function]}
          >
            <div
              className="nice-tag good"
            >
              <span
                className="nice-tag-label"
              >
                <ToolTip
                  content="Char"
                >
                  <div
                    className="tool-tip inline"
                  >
                    Charisma
                    <MDReactComponent
                      className="tool-tip--content"
                      text="Char"
                    >
                      <span
                        className="tool-tip--content"
                        key="mdrct-html-0"
                      >
                        <p
                          key="mdrct-p-0"
                        >
                          Char
                        </p>
                      </span>
                    </MDReactComponent>
                  </div>
                </ToolTip>
              </span>
            </div>
          </Tag>
          <Tag
            color={null}
            description="Dex"
            disabled={true}
            id="dexterity"
            key="tag-2"
            label="Dexterity"
            onDelete={[Function]}
          >
            <div
              className="nice-tag muted"
            >
              <span
                className="nice-tag-label"
              >
                <ToolTip
                  content="Dex"
                >
                  <div
                    className="tool-tip inline"
                  >
                    Dexterity
                    <MDReactComponent
                      className="tool-tip--content"
                      text="Dex"
                    >
                      <span
                        className="tool-tip--content"
                        key="mdrct-html-0"
                      >
                        <p
                          key="mdrct-p-0"
                        >
                          Dex
                        </p>
                      </span>
                    </MDReactComponent>
                  </div>
                </ToolTip>
              </span>
            </div>
          </Tag>
          <Tag
            color={null}
            description="Int"
            disabled={true}
            id="intelligence"
            key="tag-3"
            label="Intelligence"
            onDelete={[Function]}
          >
            <div
              className="nice-tag muted"
            >
              <span
                className="nice-tag-label"
              >
                <ToolTip
                  content="Int"
                >
                  <div
                    className="tool-tip inline"
                  >
                    Intelligence
                    <MDReactComponent
                      className="tool-tip--content"
                      text="Int"
                    >
                      <span
                        className="tool-tip--content"
                        key="mdrct-html-0"
                      >
                        <p
                          key="mdrct-p-0"
                        >
                          Int
                        </p>
                      </span>
                    </MDReactComponent>
                  </div>
                </ToolTip>
              </span>
            </div>
          </Tag>
        </div>
      </TagsContainer>
    </ListPropertySelect>
  </CharacterEditorComponent>
</ListsToItemsCharacterEditorComponent>
`;

exports[`Component: ListPropertySelect should handle adding and deleting new 4`] = `
<ListsToItemsCharacterEditorComponent
  add={1}
  given={
    Array [
      "charisma",
    ]
  }
  list={
    Array [
      "statistics",
    ]
  }
  path="some.path"
  type="list"
>
  <CharacterEditorComponent
    add={1}
    given={
      Array [
        "charisma",
      ]
    }
    items={
      Array [
        Object {
          "code": "strength",
          "description": "Str",
          "label": "Strength",
        },
        Object {
          "code": "dexterity",
          "description": "Dex",
          "label": "Dexterity",
        },
        Object {
          "code": "constitution",
          "description": "Con",
          "label": "Constitution",
        },
        Object {
          "code": "intelligence",
          "description": "Int",
          "label": "Intelligence",
        },
        Object {
          "code": "wisdom",
          "description": "Wis",
          "label": "Wisdom",
        },
        Object {
          "code": "charisma",
          "description": "Char",
          "label": "Charisma",
        },
      ]
    }
    path="some.path"
    type="list"
  >
    <ListPropertySelect
      add={1}
      current={
        Array [
          "dexterity",
          "charisma",
          "intelligence",
        ]
      }
      filter={Object {}}
      getCurrent={[Function]}
      given={
        Array [
          "charisma",
        ]
      }
      items={
        Array [
          Object {
            "code": "strength",
            "description": "Str",
            "label": "Strength",
          },
          Object {
            "code": "dexterity",
            "description": "Dex",
            "label": "Dexterity",
          },
          Object {
            "code": "constitution",
            "description": "Con",
            "label": "Constitution",
          },
          Object {
            "code": "intelligence",
            "description": "Int",
            "label": "Intelligence",
          },
          Object {
            "code": "wisdom",
            "description": "Wis",
            "label": "Wisdom",
          },
          Object {
            "code": "charisma",
            "description": "Char",
            "label": "Charisma",
          },
        ]
      }
      limit={0}
      multiple={false}
      onChange={[Function]}
      onSave={[Function]}
      onUpdate={[Function]}
      replace={0}
      type="list"
    >
      <TagsContainer>
        <div
          className="base-tag-container nice-tags-container"
        >
          <SingleSelect
            defaultValue={null}
            emptyLabel="Add..."
            isDisabled={[Function]}
            items={
              Array [
                Object {
                  "code": "strength",
                  "description": "Str",
                  "label": "Strength",
                },
                Object {
                  "code": "constitution",
                  "description": "Con",
                  "label": "Constitution",
                },
                Object {
                  "code": "wisdom",
                  "description": "Wis",
                  "label": "Wisdom",
                },
              ]
            }
            renderEmpty={null}
            selected={null}
            setState={[Function]}
          >
            <OnClickOutside(BaseSelect)
              eventTypes={
                Array [
                  "mousedown",
                  "touchstart",
                ]
              }
              excludeScrollbar={false}
              label="Add..."
              outsideClickIgnoreClass="ignore-react-onclickoutside"
              preventDefault={false}
              stopPropagation={false}
            >
              <BaseSelect
                className={null}
                closeOnClick={true}
                description={null}
                disableOnClickOutside={[Function]}
                enableOnClickOutside={[Function]}
                eventTypes={
                  Array [
                    "mousedown",
                    "touchstart",
                  ]
                }
                heading={null}
                label="Add..."
                outsideClickIgnoreClass="ignore-react-onclickoutside"
                preventDefault={false}
                stopPropagation={false}
              >
                <div
                  className="nice-dropdown nice-form-control"
                >
                  <SelectButton
                    label="Add..."
                    onToggle={[Function]}
                  >
                    <button
                      className="nice-btn"
                      onClick={[Function]}
                    >
                      Add...
                      <i
                        className="icon fa-angle-down"
                      />
                    </button>
                  </SelectButton>
                  <ul
                    className="dropdown-menu"
                    onClick={[Function]}
                  >
                    <SelectItem
                      disabled={false}
                      id="strength"
                      key="strength"
                      label="Strength"
                      onClick={[Function]}
                      selected={false}
                    >
                      <li
                        className={null}
                        data-value="strength"
                        onClick={[Function]}
                      >
                        <a>
                          Strength
                        </a>
                      </li>
                    </SelectItem>
                    <SelectItem
                      disabled={false}
                      id="constitution"
                      key="constitution"
                      label="Constitution"
                      onClick={[Function]}
                      selected={false}
                    >
                      <li
                        className={null}
                        data-value="constitution"
                        onClick={[Function]}
                      >
                        <a>
                          Constitution
                        </a>
                      </li>
                    </SelectItem>
                    <SelectItem
                      disabled={false}
                      id="wisdom"
                      key="wisdom"
                      label="Wisdom"
                      onClick={[Function]}
                      selected={false}
                    >
                      <li
                        className={null}
                        data-value="wisdom"
                        onClick={[Function]}
                      >
                        <a>
                          Wisdom
                        </a>
                      </li>
                    </SelectItem>
                  </ul>
                </div>
              </BaseSelect>
            </OnClickOutside(BaseSelect)>
          </SingleSelect>
          <Tag
            color="good"
            description="Char"
            disabled={true}
            id="charisma"
            key="tag-0"
            label="Charisma"
            onDelete={[Function]}
          >
            <div
              className="nice-tag good"
            >
              <span
                className="nice-tag-label"
              >
                <ToolTip
                  content="Char"
                >
                  <div
                    className="tool-tip inline"
                  >
                    Charisma
                    <MDReactComponent
                      className="tool-tip--content"
                      text="Char"
                    >
                      <span
                        className="tool-tip--content"
                        key="mdrct-html-0"
                      >
                        <p
                          key="mdrct-p-0"
                        >
                          Char
                        </p>
                      </span>
                    </MDReactComponent>
                  </div>
                </ToolTip>
              </span>
            </div>
          </Tag>
          <Tag
            color={null}
            description="Dex"
            disabled={true}
            id="dexterity"
            key="tag-1"
            label="Dexterity"
            onDelete={[Function]}
          >
            <div
              className="nice-tag muted"
            >
              <span
                className="nice-tag-label"
              >
                <ToolTip
                  content="Dex"
                >
                  <div
                    className="tool-tip inline"
                  >
                    Dexterity
                    <MDReactComponent
                      className="tool-tip--content"
                      text="Dex"
                    >
                      <span
                        className="tool-tip--content"
                        key="mdrct-html-0"
                      >
                        <p
                          key="mdrct-p-0"
                        >
                          Dex
                        </p>
                      </span>
                    </MDReactComponent>
                  </div>
                </ToolTip>
              </span>
            </div>
          </Tag>
          <Tag
            color={null}
            description="Int"
            disabled={true}
            id="intelligence"
            key="tag-2"
            label="Intelligence"
            onDelete={[Function]}
          >
            <div
              className="nice-tag muted"
            >
              <span
                className="nice-tag-label"
              >
                <ToolTip
                  content="Int"
                >
                  <div
                    className="tool-tip inline"
                  >
                    Intelligence
                    <MDReactComponent
                      className="tool-tip--content"
                      text="Int"
                    >
                      <span
                        className="tool-tip--content"
                        key="mdrct-html-0"
                      >
                        <p
                          key="mdrct-p-0"
                        >
                          Int
                        </p>
                      </span>
                    </MDReactComponent>
                  </div>
                </ToolTip>
              </span>
            </div>
          </Tag>
        </div>
      </TagsContainer>
    </ListPropertySelect>
  </CharacterEditorComponent>
</ListsToItemsCharacterEditorComponent>
`;

exports[`Component: ListPropertySelect should not render select w/ filtering all items 1`] = `
<ListsToItemsCharacterEditorComponent
  add={1}
  filter={
    Object {
      "code": Array [
        "impossible",
      ],
    }
  }
  list={
    Array [
      "statistics",
    ]
  }
  path="some.path"
  type="list"
>
  <CharacterEditorComponent
    add={1}
    filter={
      Object {
        "code": Array [
          "impossible",
        ],
      }
    }
    items={
      Array [
        Object {
          "code": "strength",
          "description": "Str",
          "label": "Strength",
        },
        Object {
          "code": "dexterity",
          "description": "Dex",
          "label": "Dexterity",
        },
        Object {
          "code": "constitution",
          "description": "Con",
          "label": "Constitution",
        },
        Object {
          "code": "intelligence",
          "description": "Int",
          "label": "Intelligence",
        },
        Object {
          "code": "wisdom",
          "description": "Wis",
          "label": "Wisdom",
        },
        Object {
          "code": "charisma",
          "description": "Char",
          "label": "Charisma",
        },
      ]
    }
    path="some.path"
    type="list"
  >
    <ListPropertySelect
      add={1}
      current={
        Array [
          "dexterity",
        ]
      }
      filter={
        Object {
          "code": Array [
            "impossible",
          ],
        }
      }
      getCurrent={[Function]}
      given={Array []}
      items={
        Array [
          Object {
            "code": "strength",
            "description": "Str",
            "label": "Strength",
          },
          Object {
            "code": "dexterity",
            "description": "Dex",
            "label": "Dexterity",
          },
          Object {
            "code": "constitution",
            "description": "Con",
            "label": "Constitution",
          },
          Object {
            "code": "intelligence",
            "description": "Int",
            "label": "Intelligence",
          },
          Object {
            "code": "wisdom",
            "description": "Wis",
            "label": "Wisdom",
          },
          Object {
            "code": "charisma",
            "description": "Char",
            "label": "Charisma",
          },
        ]
      }
      limit={0}
      multiple={false}
      onChange={[Function]}
      onSave={[Function]}
      onUpdate={[Function]}
      replace={0}
      type="list"
    >
      <TagsContainer>
        <div
          className="base-tag-container nice-tags-container"
        >
          <Tag
            color={null}
            description="Dex"
            disabled={true}
            id="dexterity"
            key="tag-0"
            label="Dexterity"
            onDelete={[Function]}
          >
            <div
              className="nice-tag muted"
            >
              <span
                className="nice-tag-label"
              >
                <ToolTip
                  content="Dex"
                >
                  <div
                    className="tool-tip inline"
                  >
                    Dexterity
                    <MDReactComponent
                      className="tool-tip--content"
                      text="Dex"
                    >
                      <span
                        className="tool-tip--content"
                        key="mdrct-html-0"
                      >
                        <p
                          key="mdrct-p-0"
                        >
                          Dex
                        </p>
                      </span>
                    </MDReactComponent>
                  </div>
                </ToolTip>
              </span>
            </div>
          </Tag>
        </div>
      </TagsContainer>
    </ListPropertySelect>
  </CharacterEditorComponent>
</ListsToItemsCharacterEditorComponent>
`;

exports[`Component: ListPropertySelect should not render select w/o items 1`] = `
<ListsToItemsCharacterEditorComponent
  add={1}
  path="some.path"
  type="list"
>
  <CharacterEditorComponent
    add={1}
    items={Array []}
    path="some.path"
    type="list"
  >
    <ListPropertySelect
      add={1}
      current={
        Array [
          "dexterity",
        ]
      }
      filter={Object {}}
      getCurrent={[Function]}
      given={Array []}
      items={Array []}
      limit={0}
      multiple={false}
      onChange={[Function]}
      onSave={[Function]}
      onUpdate={[Function]}
      replace={0}
      type="list"
    >
      <TagsContainer>
        <div
          className="base-tag-container nice-tags-container"
        />
      </TagsContainer>
    </ListPropertySelect>
  </CharacterEditorComponent>
</ListsToItemsCharacterEditorComponent>
`;

exports[`Component: ListPropertySelect should not render when hidden 1`] = `
<ListsToItemsCharacterEditorComponent
  hidden={true}
  list={
    Array [
      "statistics",
    ]
  }
  path="some.path"
  type="list"
>
  <CharacterEditorComponent
    hidden={true}
    items={
      Array [
        Object {
          "code": "strength",
          "description": "Str",
          "label": "Strength",
        },
        Object {
          "code": "dexterity",
          "description": "Dex",
          "label": "Dexterity",
        },
        Object {
          "code": "constitution",
          "description": "Con",
          "label": "Constitution",
        },
        Object {
          "code": "intelligence",
          "description": "Int",
          "label": "Intelligence",
        },
        Object {
          "code": "wisdom",
          "description": "Wis",
          "label": "Wisdom",
        },
        Object {
          "code": "charisma",
          "description": "Char",
          "label": "Charisma",
        },
      ]
    }
    path="some.path"
    type="list"
  >
    <ListPropertySelect
      add={0}
      current={
        Array [
          "dexterity",
        ]
      }
      filter={Object {}}
      getCurrent={[Function]}
      given={Array []}
      hidden={true}
      items={
        Array [
          Object {
            "code": "strength",
            "description": "Str",
            "label": "Strength",
          },
          Object {
            "code": "dexterity",
            "description": "Dex",
            "label": "Dexterity",
          },
          Object {
            "code": "constitution",
            "description": "Con",
            "label": "Constitution",
          },
          Object {
            "code": "intelligence",
            "description": "Int",
            "label": "Intelligence",
          },
          Object {
            "code": "wisdom",
            "description": "Wis",
            "label": "Wisdom",
          },
          Object {
            "code": "charisma",
            "description": "Char",
            "label": "Charisma",
          },
        ]
      }
      limit={0}
      multiple={false}
      onChange={[Function]}
      onSave={[Function]}
      onUpdate={[Function]}
      replace={0}
      type="list"
    />
  </CharacterEditorComponent>
</ListsToItemsCharacterEditorComponent>
`;

exports[`Component: ListPropertySelect should omit unknown current values 1`] = `
<ListsToItemsCharacterEditorComponent
  given={
    Array [
      "foo",
    ]
  }
  list={
    Array [
      "statistics",
    ]
  }
  path="some.path"
  type="list"
>
  <CharacterEditorComponent
    given={
      Array [
        "foo",
      ]
    }
    items={
      Array [
        Object {
          "code": "strength",
          "description": "Str",
          "label": "Strength",
        },
        Object {
          "code": "dexterity",
          "description": "Dex",
          "label": "Dexterity",
        },
        Object {
          "code": "constitution",
          "description": "Con",
          "label": "Constitution",
        },
        Object {
          "code": "intelligence",
          "description": "Int",
          "label": "Intelligence",
        },
        Object {
          "code": "wisdom",
          "description": "Wis",
          "label": "Wisdom",
        },
        Object {
          "code": "charisma",
          "description": "Char",
          "label": "Charisma",
        },
      ]
    }
    path="some.path"
    type="list"
  >
    <ListPropertySelect
      add={0}
      current={
        Array [
          "dexterity",
          "foo",
        ]
      }
      filter={Object {}}
      getCurrent={[Function]}
      given={
        Array [
          "foo",
        ]
      }
      items={
        Array [
          Object {
            "code": "strength",
            "description": "Str",
            "label": "Strength",
          },
          Object {
            "code": "dexterity",
            "description": "Dex",
            "label": "Dexterity",
          },
          Object {
            "code": "constitution",
            "description": "Con",
            "label": "Constitution",
          },
          Object {
            "code": "intelligence",
            "description": "Int",
            "label": "Intelligence",
          },
          Object {
            "code": "wisdom",
            "description": "Wis",
            "label": "Wisdom",
          },
          Object {
            "code": "charisma",
            "description": "Char",
            "label": "Charisma",
          },
        ]
      }
      limit={0}
      multiple={false}
      onChange={[Function]}
      onSave={[Function]}
      onUpdate={[Function]}
      replace={0}
      type="list"
    >
      <TagsContainer>
        <div
          className="base-tag-container nice-tags-container"
        >
          <Tag
            color="good"
            disabled={true}
            id="foo"
            key="tag-0"
            label="foo"
            onDelete={[Function]}
          >
            <div
              className="nice-tag good"
            >
              <span
                className="nice-tag-label"
              >
                <ToolTip>
                  foo
                </ToolTip>
              </span>
            </div>
          </Tag>
          <Tag
            color={null}
            description="Dex"
            disabled={true}
            id="dexterity"
            key="tag-1"
            label="Dexterity"
            onDelete={[Function]}
          >
            <div
              className="nice-tag muted"
            >
              <span
                className="nice-tag-label"
              >
                <ToolTip
                  content="Dex"
                >
                  <div
                    className="tool-tip inline"
                  >
                    Dexterity
                    <MDReactComponent
                      className="tool-tip--content"
                      text="Dex"
                    >
                      <span
                        className="tool-tip--content"
                        key="mdrct-html-0"
                      >
                        <p
                          key="mdrct-p-0"
                        >
                          Dex
                        </p>
                      </span>
                    </MDReactComponent>
                  </div>
                </ToolTip>
              </span>
            </div>
          </Tag>
        </div>
      </TagsContainer>
    </ListPropertySelect>
  </CharacterEditorComponent>
</ListsToItemsCharacterEditorComponent>
`;

exports[`Component: ListPropertySelect should render with full props 1`] = `
<ListsToItemsCharacterEditorComponent
  add={2}
  filter={
    Object {
      "code": Array [
        "strength",
        "intelligence",
      ],
      "some_formula": "blah blah",
    }
  }
  given={
    Array [
      "constitution",
      "charisma",
    ]
  }
  list={
    Array [
      "statistics",
    ]
  }
  multiple={true}
  path="some.path"
  replace={1}
  type="list"
>
  <CharacterEditorComponent
    add={2}
    filter={
      Object {
        "code": Array [
          "strength",
          "intelligence",
        ],
        "some_formula": "blah blah",
      }
    }
    given={
      Array [
        "constitution",
        "charisma",
      ]
    }
    items={
      Array [
        Object {
          "code": "strength",
          "description": "Str",
          "label": "Strength",
        },
        Object {
          "code": "dexterity",
          "description": "Dex",
          "label": "Dexterity",
        },
        Object {
          "code": "constitution",
          "description": "Con",
          "label": "Constitution",
        },
        Object {
          "code": "intelligence",
          "description": "Int",
          "label": "Intelligence",
        },
        Object {
          "code": "wisdom",
          "description": "Wis",
          "label": "Wisdom",
        },
        Object {
          "code": "charisma",
          "description": "Char",
          "label": "Charisma",
        },
      ]
    }
    multiple={true}
    path="some.path"
    replace={1}
    type="list"
  >
    <ListPropertySelect
      add={2}
      current={
        Array [
          "dexterity",
          "constitution",
          "charisma",
        ]
      }
      filter={
        Object {
          "code": Array [
            "strength",
            "intelligence",
          ],
          "some_formula": "blah blah",
        }
      }
      getCurrent={[Function]}
      given={
        Array [
          "constitution",
          "charisma",
        ]
      }
      items={
        Array [
          Object {
            "code": "strength",
            "description": "Str",
            "label": "Strength",
          },
          Object {
            "code": "dexterity",
            "description": "Dex",
            "label": "Dexterity",
          },
          Object {
            "code": "constitution",
            "description": "Con",
            "label": "Constitution",
          },
          Object {
            "code": "intelligence",
            "description": "Int",
            "label": "Intelligence",
          },
          Object {
            "code": "wisdom",
            "description": "Wis",
            "label": "Wisdom",
          },
          Object {
            "code": "charisma",
            "description": "Char",
            "label": "Charisma",
          },
        ]
      }
      limit={0}
      multiple={true}
      onChange={[Function]}
      onSave={[Function]}
      onUpdate={[Function]}
      replace={1}
      type="list"
    >
      <TagsContainer>
        <div
          className="base-tag-container nice-tags-container"
        >
          <SingleSelect
            defaultValue={null}
            emptyLabel="Add..."
            isDisabled={[Function]}
            items={
              Array [
                Object {
                  "code": "strength",
                  "description": "Str",
                  "label": "Strength",
                },
                Object {
                  "code": "intelligence",
                  "description": "Int",
                  "label": "Intelligence",
                },
              ]
            }
            renderEmpty={null}
            selected={null}
            setState={[Function]}
          >
            <OnClickOutside(BaseSelect)
              eventTypes={
                Array [
                  "mousedown",
                  "touchstart",
                ]
              }
              excludeScrollbar={false}
              label="Add..."
              outsideClickIgnoreClass="ignore-react-onclickoutside"
              preventDefault={false}
              stopPropagation={false}
            >
              <BaseSelect
                className={null}
                closeOnClick={true}
                description={null}
                disableOnClickOutside={[Function]}
                enableOnClickOutside={[Function]}
                eventTypes={
                  Array [
                    "mousedown",
                    "touchstart",
                  ]
                }
                heading={null}
                label="Add..."
                outsideClickIgnoreClass="ignore-react-onclickoutside"
                preventDefault={false}
                stopPropagation={false}
              >
                <div
                  className="nice-dropdown nice-form-control"
                >
                  <SelectButton
                    label="Add..."
                    onToggle={[Function]}
                  >
                    <button
                      className="nice-btn"
                      onClick={[Function]}
                    >
                      Add...
                      <i
                        className="icon fa-angle-down"
                      />
                    </button>
                  </SelectButton>
                  <ul
                    className="dropdown-menu"
                    onClick={[Function]}
                  >
                    <SelectItem
                      disabled={false}
                      id="strength"
                      key="strength"
                      label="Strength"
                      onClick={[Function]}
                      selected={false}
                    >
                      <li
                        className={null}
                        data-value="strength"
                        onClick={[Function]}
                      >
                        <a>
                          Strength
                        </a>
                      </li>
                    </SelectItem>
                    <SelectItem
                      disabled={false}
                      id="intelligence"
                      key="intelligence"
                      label="Intelligence"
                      onClick={[Function]}
                      selected={false}
                    >
                      <li
                        className={null}
                        data-value="intelligence"
                        onClick={[Function]}
                      >
                        <a>
                          Intelligence
                        </a>
                      </li>
                    </SelectItem>
                  </ul>
                </div>
              </BaseSelect>
            </OnClickOutside(BaseSelect)>
          </SingleSelect>
          <Tag
            color="good"
            description="Con"
            disabled={true}
            id="constitution"
            key="tag-0"
            label="Constitution"
            onDelete={[Function]}
          >
            <div
              className="nice-tag good"
            >
              <span
                className="nice-tag-label"
              >
                <ToolTip
                  content="Con"
                >
                  <div
                    className="tool-tip inline"
                  >
                    Constitution
                    <MDReactComponent
                      className="tool-tip--content"
                      text="Con"
                    >
                      <span
                        className="tool-tip--content"
                        key="mdrct-html-0"
                      >
                        <p
                          key="mdrct-p-0"
                        >
                          Con
                        </p>
                      </span>
                    </MDReactComponent>
                  </div>
                </ToolTip>
              </span>
            </div>
          </Tag>
          <Tag
            color="good"
            description="Char"
            disabled={true}
            id="charisma"
            key="tag-1"
            label="Charisma"
            onDelete={[Function]}
          >
            <div
              className="nice-tag good"
            >
              <span
                className="nice-tag-label"
              >
                <ToolTip
                  content="Char"
                >
                  <div
                    className="tool-tip inline"
                  >
                    Charisma
                    <MDReactComponent
                      className="tool-tip--content"
                      text="Char"
                    >
                      <span
                        className="tool-tip--content"
                        key="mdrct-html-0"
                      >
                        <p
                          key="mdrct-p-0"
                        >
                          Char
                        </p>
                      </span>
                    </MDReactComponent>
                  </div>
                </ToolTip>
              </span>
            </div>
          </Tag>
          <Tag
            color="warning"
            description="Dex"
            disabled={false}
            id="dexterity"
            key="tag-2"
            label="Dexterity"
            onDelete={[Function]}
          >
            <div
              className="nice-tag warning"
            >
              <span
                className="nice-tag-label"
              >
                <ToolTip
                  content="Dex"
                >
                  <div
                    className="tool-tip inline"
                  >
                    Dexterity
                    <MDReactComponent
                      className="tool-tip--content"
                      text="Dex"
                    >
                      <span
                        className="tool-tip--content"
                        key="mdrct-html-0"
                      >
                        <p
                          key="mdrct-p-0"
                        >
                          Dex
                        </p>
                      </span>
                    </MDReactComponent>
                  </div>
                </ToolTip>
              </span>
              <TagBadgeButton
                icon="fa-trash-o"
                onClick={[Function]}
              >
                <button
                  className="nice-tag-btn"
                  onClick={[Function]}
                >
                  <i
                    className="icon fa-trash-o"
                  />
                </button>
              </TagBadgeButton>
            </div>
          </Tag>
        </div>
      </TagsContainer>
    </ListPropertySelect>
  </CharacterEditorComponent>
</ListsToItemsCharacterEditorComponent>
`;

exports[`Component: ListPropertySelect should render with minimum props 1`] = `
<ListsToItemsCharacterEditorComponent
  path="some.path"
  type="list"
>
  <CharacterEditorComponent
    items={Array []}
    path="some.path"
    type="list"
  >
    <ListPropertySelect
      add={0}
      current={
        Array [
          "dexterity",
        ]
      }
      filter={Object {}}
      getCurrent={[Function]}
      given={Array []}
      items={Array []}
      limit={0}
      multiple={false}
      onChange={[Function]}
      onSave={[Function]}
      onUpdate={[Function]}
      replace={0}
      type="list"
    >
      <TagsContainer>
        <div
          className="base-tag-container nice-tags-container"
        />
      </TagsContainer>
    </ListPropertySelect>
  </CharacterEditorComponent>
</ListsToItemsCharacterEditorComponent>
`;
