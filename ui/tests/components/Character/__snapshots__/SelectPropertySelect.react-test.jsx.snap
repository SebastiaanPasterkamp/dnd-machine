// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component: SelectPropertySelect should not render anything 1`] = `
<ListsToItems
  hidden={true}
  items={
    Array [
      Object {
        "code": "strength",
        "description": "Str",
        "label": "Strength",
      },
      Object {
        "code": "dexterity",
        "description": "Dex",
        "label": "Dexterity",
      },
      Object {
        "code": "constitution",
        "description": "Con",
        "label": "Constitution",
      },
      Object {
        "code": "intelligence",
        "description": "Int",
        "label": "Intelligence",
      },
      Object {
        "code": "wisdom",
        "description": "Wis",
        "label": "Wisdom",
      },
      Object {
        "code": "charisma",
        "description": "Char",
        "label": "Charisma",
      },
    ]
  }
  path="some.path"
  type="select"
>
  <CharacterEditorComponent
    hidden={true}
    items={
      Array [
        Object {
          "code": "strength",
          "description": "Str",
          "label": "Strength",
        },
        Object {
          "code": "dexterity",
          "description": "Dex",
          "label": "Dexterity",
        },
        Object {
          "code": "constitution",
          "description": "Con",
          "label": "Constitution",
        },
        Object {
          "code": "intelligence",
          "description": "Int",
          "label": "Intelligence",
        },
        Object {
          "code": "wisdom",
          "description": "Wis",
          "label": "Wisdom",
        },
        Object {
          "code": "charisma",
          "description": "Char",
          "label": "Charisma",
        },
      ]
    }
    path="some.path"
    type="select"
  >
    <SelectPropertySelect
      current="charisma"
      getCurrent={[Function]}
      hidden={true}
      items={
        Array [
          Object {
            "code": "strength",
            "description": "Str",
            "label": "Strength",
          },
          Object {
            "code": "dexterity",
            "description": "Dex",
            "label": "Dexterity",
          },
          Object {
            "code": "constitution",
            "description": "Con",
            "label": "Constitution",
          },
          Object {
            "code": "intelligence",
            "description": "Int",
            "label": "Intelligence",
          },
          Object {
            "code": "wisdom",
            "description": "Wis",
            "label": "Wisdom",
          },
          Object {
            "code": "charisma",
            "description": "Char",
            "label": "Charisma",
          },
        ]
      }
      onChange={[Function]}
      type="select"
    />
  </CharacterEditorComponent>
</ListsToItems>
`;

exports[`Component: SelectPropertySelect should render the list 1`] = `
<ListsToItems
  items={
    Array [
      Object {
        "code": "strength",
        "description": "Str",
        "label": "Strength",
      },
      Object {
        "code": "dexterity",
        "description": "Dex",
        "label": "Dexterity",
      },
      Object {
        "code": "constitution",
        "description": "Con",
        "label": "Constitution",
      },
      Object {
        "code": "intelligence",
        "description": "Int",
        "label": "Intelligence",
      },
      Object {
        "code": "wisdom",
        "description": "Wis",
        "label": "Wisdom",
      },
      Object {
        "code": "charisma",
        "description": "Char",
        "label": "Charisma",
      },
    ]
  }
  path="some.path"
  type="select"
>
  <CharacterEditorComponent
    items={
      Array [
        Object {
          "code": "strength",
          "description": "Str",
          "label": "Strength",
        },
        Object {
          "code": "dexterity",
          "description": "Dex",
          "label": "Dexterity",
        },
        Object {
          "code": "constitution",
          "description": "Con",
          "label": "Constitution",
        },
        Object {
          "code": "intelligence",
          "description": "Int",
          "label": "Intelligence",
        },
        Object {
          "code": "wisdom",
          "description": "Wis",
          "label": "Wisdom",
        },
        Object {
          "code": "charisma",
          "description": "Char",
          "label": "Charisma",
        },
      ]
    }
    path="some.path"
    type="select"
  >
    <SelectPropertySelect
      current="charisma"
      getCurrent={[Function]}
      items={
        Array [
          Object {
            "code": "strength",
            "description": "Str",
            "label": "Strength",
          },
          Object {
            "code": "dexterity",
            "description": "Dex",
            "label": "Dexterity",
          },
          Object {
            "code": "constitution",
            "description": "Con",
            "label": "Constitution",
          },
          Object {
            "code": "intelligence",
            "description": "Int",
            "label": "Intelligence",
          },
          Object {
            "code": "wisdom",
            "description": "Wis",
            "label": "Wisdom",
          },
          Object {
            "code": "charisma",
            "description": "Char",
            "label": "Charisma",
          },
        ]
      }
      onChange={[Function]}
      type="select"
    >
      <SingleSelect
        className="small"
        emptyLabel="Please select"
        isDisabled={[Function]}
        items={
          Array [
            Object {
              "code": "strength",
              "description": "Str",
              "label": "Strength",
            },
            Object {
              "code": "dexterity",
              "description": "Dex",
              "label": "Dexterity",
            },
            Object {
              "code": "constitution",
              "description": "Con",
              "label": "Constitution",
            },
            Object {
              "code": "intelligence",
              "description": "Int",
              "label": "Intelligence",
            },
            Object {
              "code": "wisdom",
              "description": "Wis",
              "label": "Wisdom",
            },
            Object {
              "code": "charisma",
              "description": "Char",
              "label": "Charisma",
            },
          ]
        }
        selected="charisma"
        setState={[Function]}
      >
        <OnClickOutside(BaseSelect)
          className="small"
          eventTypes={
            Array [
              "mousedown",
              "touchstart",
            ]
          }
          excludeScrollbar={false}
          label="Charisma"
          outsideClickIgnoreClass="ignore-react-onclickoutside"
          preventDefault={false}
          stopPropagation={false}
        >
          <BaseSelect
            className="small"
            closeOnClick={true}
            disableOnClickOutside={[Function]}
            enableOnClickOutside={[Function]}
            eventTypes={
              Array [
                "mousedown",
                "touchstart",
              ]
            }
            label="Charisma"
            outsideClickIgnoreClass="ignore-react-onclickoutside"
            preventDefault={false}
            stopPropagation={false}
          >
            <div
              className="nice-dropdown nice-form-control"
            >
              <button
                className="nice-btn"
                onClick={[Function]}
              >
                Charisma
                <i
                  className="icon fa-angle-down"
                />
              </button>
              <ul
                className="dropdown-menu"
                onClick={[Function]}
              >
                <li
                  className={null}
                  data-value="strength"
                  key="strength"
                  onClick={[Function]}
                >
                  <a>
                    Strength
                  </a>
                </li>
                <li
                  className={null}
                  data-value="dexterity"
                  key="dexterity"
                  onClick={[Function]}
                >
                  <a>
                    Dexterity
                  </a>
                </li>
                <li
                  className={null}
                  data-value="constitution"
                  key="constitution"
                  onClick={[Function]}
                >
                  <a>
                    Constitution
                  </a>
                </li>
                <li
                  className={null}
                  data-value="intelligence"
                  key="intelligence"
                  onClick={[Function]}
                >
                  <a>
                    Intelligence
                  </a>
                </li>
                <li
                  className={null}
                  data-value="wisdom"
                  key="wisdom"
                  onClick={[Function]}
                >
                  <a>
                    Wisdom
                  </a>
                </li>
                <li
                  className="info"
                  data-value="charisma"
                  key="charisma"
                  onClick={[Function]}
                >
                  <a>
                    Charisma
                  </a>
                </li>
              </ul>
            </div>
          </BaseSelect>
        </OnClickOutside(BaseSelect)>
      </SingleSelect>
    </SelectPropertySelect>
  </CharacterEditorComponent>
</ListsToItems>
`;
