// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component: MultipleChoiceSelect should render with full props 1`] = `
<div>
  <div
    className="base-tag-container nice-tags-container"
  >
    <div
      className="nice-dropdown nice-form-control"
    >
      <button
        className="nice-btn"
        onClick={[Function]}
      >
        Add...
        <i
          className="icon fa-angle-down"
        />
      </button>
      <ul
        className="dropdown-menu"
        onClick={[Function]}
      >
        <li
          className={null}
          data-value="Simple"
          onClick={[Function]}
        >
          <a>
            Simple
          </a>
        </li>
      </ul>
    </div>
    <div
      className="nice-tag"
    >
      <span
        className="nice-tag-label"
      >
        Complex
      </span>
      <button
        className="nice-tag-btn"
        onClick={[Function]}
      >
        <i
          className="icon fa-trash-o"
        />
      </button>
    </div>
  </div>
  <div
    className="nice-form-group"
  >
    <label>
      Complex
    </label>
    <div
      className="markdown-textedit small preview"
    >
      <span
        className="markdown-textedit__preview"
      >
        <p>
          Foo is okay
        </p>
      </span>
    </div>
  </div>
</div>
`;

exports[`Component: MultipleChoiceSelect should render with minimum props 1`] = `
<div>
  <div
    className="base-tag-container nice-tags-container"
  >
    <div
      className="nice-tag"
    >
      <span
        className="nice-tag-label"
      >
        Complex
      </span>
      <button
        className="nice-tag-btn"
        onClick={[Function]}
      >
        <i
          className="icon fa-trash-o"
        />
      </button>
    </div>
  </div>
  <div
    className="nice-form-group"
  >
    <label>
      Complex
    </label>
    <div
      className="markdown-textedit small preview"
    >
      <span
        className="markdown-textedit__preview"
      >
        <p>
          Foo is okay
        </p>
      </span>
    </div>
  </div>
</div>
`;

exports[`added 1`] = `
<MultipleChoiceSelect
  description="Pick some"
  getCurrent={[Function]}
  getItems={[Function]}
  index={Array []}
  label="Example"
  limit={1}
  onChange={[Function]}
  options={
    Array [
      Object {
        "dict": Object {
          "description": "Bar is good",
        },
        "label": "Simple",
        "path": "foo.bar",
        "type": "dict",
      },
      Object {
        "config": Array [
          Object {
            "dict": Object {
              "description": "Foo is okay",
            },
            "path": "bar.foo",
            "type": "dict",
          },
        ],
        "label": "Complex",
        "type": "config",
      },
    ]
  }
>
  <div>
    <TagContainer
      items={
        Array [
          Object {
            "code": "Simple",
            "color": "info",
            "label": "Simple",
          },
          Object {
            "code": "Complex",
            "color": "warning",
            "label": "Complex",
          },
        ]
      }
      onAdd={[Function]}
      onDelete={[Function]}
      setState={[Function]}
      showSelect={false}
      value={
        Array [
          "Simple",
        ]
      }
    >
      <TagsContainer>
        <div
          className="base-tag-container nice-tags-container"
        >
          <Tag
            count={1}
            key="Simple"
            label="Simple"
            onDelete={[Function]}
          >
            <div
              className="nice-tag"
            >
              <span
                className="nice-tag-label"
              >
                <ToolTip>
                  Simple
                </ToolTip>
              </span>
              <TagBadgeButton
                icon="fa-trash-o"
                onClick={[Function]}
              >
                <button
                  className="nice-tag-btn"
                  onClick={[Function]}
                >
                  <i
                    className="icon fa-trash-o"
                  />
                </button>
              </TagBadgeButton>
            </div>
          </Tag>
        </div>
      </TagsContainer>
    </TagContainer>
    <CharacterConfig
      config={
        Array [
          Object {
            "dict": Object {
              "description": "Bar is good",
            },
            "label": "Simple",
            "path": "foo.bar",
            "type": "dict",
          },
        ]
      }
      getCurrent={[Function]}
      getItems={[Function]}
      index={
        Array [
          0,
        ]
      }
      key="0"
      onChange={[Function]}
    >
      <FormGroup
        key="0"
        label="Simple"
      >
        <div
          className="nice-form-group"
        >
          <label>
            Simple
          </label>
          <DictPropertySelect
            current={null}
            dict={
              Object {
                "description": "Bar is good",
              }
            }
            index={
              Array [
                0,
                0,
              ]
            }
            label="Simple"
            onChange={[Function]}
            path="foo.bar"
            type="dict"
          >
            <MarkdownTextField
              className="small"
              disabled={true}
              setState={[Function]}
              value="Bar is good"
            >
              <div
                className="markdown-textedit small preview"
              >
                <MDReactComponent
                  className="markdown-textedit__preview"
                  text="Bar is good"
                >
                  <span
                    className="markdown-textedit__preview"
                    key="mdrct-html-0"
                  >
                    <p
                      key="mdrct-p-0"
                    >
                      Bar is good
                    </p>
                  </span>
                </MDReactComponent>
              </div>
            </MarkdownTextField>
          </DictPropertySelect>
        </div>
      </FormGroup>
    </CharacterConfig>
  </div>
</MultipleChoiceSelect>
`;

exports[`added back 1`] = `
<MultipleChoiceSelect
  description="Pick some"
  getCurrent={[Function]}
  getItems={[Function]}
  index={Array []}
  label="Example"
  onChange={[Function]}
  options={
    Array [
      Object {
        "dict": Object {
          "description": "Bar is good",
        },
        "label": "Simple",
        "path": "foo.bar",
        "type": "dict",
      },
      Object {
        "config": Array [
          Object {
            "dict": Object {
              "description": "Foo is okay",
            },
            "path": "bar.foo",
            "type": "dict",
          },
        ],
        "label": "Complex",
        "type": "config",
      },
    ]
  }
  replace={1}
>
  <div>
    <TagContainer
      items={
        Array [
          Object {
            "code": "Simple",
            "color": "warning",
            "label": "Simple",
          },
          Object {
            "code": "Complex",
            "color": "info",
            "label": "Complex",
          },
        ]
      }
      onAdd={[Function]}
      onDelete={[Function]}
      setState={[Function]}
      showSelect={false}
      value={
        Array [
          "Complex",
        ]
      }
    >
      <TagsContainer>
        <div
          className="base-tag-container nice-tags-container"
        >
          <Tag
            count={1}
            key="Complex"
            label="Complex"
            onDelete={[Function]}
          >
            <div
              className="nice-tag"
            >
              <span
                className="nice-tag-label"
              >
                <ToolTip>
                  Complex
                </ToolTip>
              </span>
              <TagBadgeButton
                icon="fa-trash-o"
                onClick={[Function]}
              >
                <button
                  className="nice-tag-btn"
                  onClick={[Function]}
                >
                  <i
                    className="icon fa-trash-o"
                  />
                </button>
              </TagBadgeButton>
            </div>
          </Tag>
        </div>
      </TagsContainer>
    </TagContainer>
    <CharacterConfig
      config={
        Array [
          Object {
            "config": Array [
              Object {
                "dict": Object {
                  "description": "Foo is okay",
                },
                "path": "bar.foo",
                "type": "dict",
              },
            ],
            "label": "Complex",
            "type": "config",
          },
        ]
      }
      getCurrent={[Function]}
      getItems={[Function]}
      index={
        Array [
          0,
        ]
      }
      key="0"
      onChange={[Function]}
    >
      <FormGroup
        key="0"
        label="Complex"
      >
        <div
          className="nice-form-group"
        >
          <label>
            Complex
          </label>
          <CharacterConfig
            config={
              Array [
                Object {
                  "dict": Object {
                    "description": "Foo is okay",
                  },
                  "path": "bar.foo",
                  "type": "dict",
                },
              ]
            }
            getCurrent={[Function]}
            getItems={[Function]}
            index={
              Array [
                0,
                0,
              ]
            }
            label="Complex"
            onChange={[Function]}
            type="config"
          >
            <DictPropertySelect
              current={null}
              dict={
                Object {
                  "description": "Foo is okay",
                }
              }
              index={
                Array [
                  0,
                  0,
                  0,
                ]
              }
              key="0"
              onChange={[Function]}
              path="bar.foo"
              type="dict"
            >
              <MarkdownTextField
                className="small"
                disabled={true}
                setState={[Function]}
                value="Foo is okay"
              >
                <div
                  className="markdown-textedit small preview"
                >
                  <MDReactComponent
                    className="markdown-textedit__preview"
                    text="Foo is okay"
                  >
                    <span
                      className="markdown-textedit__preview"
                      key="mdrct-html-0"
                    >
                      <p
                        key="mdrct-p-0"
                      >
                        Foo is okay
                      </p>
                    </span>
                  </MDReactComponent>
                </div>
              </MarkdownTextField>
            </DictPropertySelect>
          </CharacterConfig>
        </div>
      </FormGroup>
    </CharacterConfig>
  </div>
</MultipleChoiceSelect>
`;

exports[`removed 1`] = `
<MultipleChoiceSelect
  description="Pick some"
  getCurrent={[Function]}
  getItems={[Function]}
  index={Array []}
  label="Example"
  onChange={[Function]}
  options={
    Array [
      Object {
        "dict": Object {
          "description": "Bar is good",
        },
        "label": "Simple",
        "path": "foo.bar",
        "type": "dict",
      },
      Object {
        "config": Array [
          Object {
            "dict": Object {
              "description": "Foo is okay",
            },
            "path": "bar.foo",
            "type": "dict",
          },
        ],
        "label": "Complex",
        "type": "config",
      },
    ]
  }
  replace={1}
>
  <div>
    <TagContainer
      items={
        Array [
          Object {
            "code": "Simple",
            "color": "warning",
            "label": "Simple",
          },
          Object {
            "code": "Complex",
            "color": "warning",
            "label": "Complex",
          },
        ]
      }
      onAdd={[Function]}
      onDelete={[Function]}
      setState={[Function]}
      showSelect={true}
      value={Array []}
    >
      <TagsContainer>
        <div
          className="base-tag-container nice-tags-container"
        >
          <SingleSelect
            emptyLabel="Add..."
            isDisabled={[Function]}
            items={
              Array [
                Object {
                  "code": "Simple",
                  "label": "Simple",
                },
                Object {
                  "code": "Complex",
                  "label": "Complex",
                },
              ]
            }
            setState={[Function]}
          >
            <OnClickOutside(BaseSelect)
              eventTypes={
                Array [
                  "mousedown",
                  "touchstart",
                ]
              }
              excludeScrollbar={false}
              label="Add..."
              outsideClickIgnoreClass="ignore-react-onclickoutside"
              preventDefault={false}
              stopPropagation={false}
            >
              <BaseSelect
                closeOnClick={true}
                disableOnClickOutside={[Function]}
                enableOnClickOutside={[Function]}
                eventTypes={
                  Array [
                    "mousedown",
                    "touchstart",
                  ]
                }
                label="Add..."
                outsideClickIgnoreClass="ignore-react-onclickoutside"
                preventDefault={false}
                stopPropagation={false}
              >
                <div
                  className="nice-dropdown nice-form-control"
                >
                  <button
                    className="nice-btn"
                    onClick={[Function]}
                  >
                    Add...
                    <i
                      className="icon fa-angle-down"
                    />
                  </button>
                  <ul
                    className="dropdown-menu"
                    onClick={[Function]}
                  >
                    <li
                      className={null}
                      data-value="Simple"
                      key="Simple"
                      onClick={[Function]}
                    >
                      <a>
                        Simple
                      </a>
                    </li>
                    <li
                      className={null}
                      data-value="Complex"
                      key="Complex"
                      onClick={[Function]}
                    >
                      <a>
                        Complex
                      </a>
                    </li>
                  </ul>
                </div>
              </BaseSelect>
            </OnClickOutside(BaseSelect)>
          </SingleSelect>
        </div>
      </TagsContainer>
    </TagContainer>
  </div>
</MultipleChoiceSelect>
`;

exports[`removed 2`] = `
<MultipleChoiceSelect
  description="Pick some"
  getCurrent={[Function]}
  getItems={[Function]}
  index={Array []}
  label="Example"
  limit={1}
  onChange={[Function]}
  options={
    Array [
      Object {
        "dict": Object {
          "description": "Bar is good",
        },
        "label": "Simple",
        "path": "foo.bar",
        "type": "dict",
      },
      Object {
        "config": Array [
          Object {
            "dict": Object {
              "description": "Foo is okay",
            },
            "path": "bar.foo",
            "type": "dict",
          },
        ],
        "label": "Complex",
        "type": "config",
      },
    ]
  }
>
  <div>
    <TagContainer
      items={
        Array [
          Object {
            "code": "Simple",
            "color": "warning",
            "label": "Simple",
          },
          Object {
            "code": "Complex",
            "color": "warning",
            "label": "Complex",
          },
        ]
      }
      onAdd={[Function]}
      onDelete={[Function]}
      setState={[Function]}
      showSelect={true}
      value={Array []}
    >
      <TagsContainer>
        <div
          className="base-tag-container nice-tags-container"
        >
          <SingleSelect
            emptyLabel="Add..."
            isDisabled={[Function]}
            items={
              Array [
                Object {
                  "code": "Simple",
                  "label": "Simple",
                },
                Object {
                  "code": "Complex",
                  "label": "Complex",
                },
              ]
            }
            setState={[Function]}
          >
            <OnClickOutside(BaseSelect)
              eventTypes={
                Array [
                  "mousedown",
                  "touchstart",
                ]
              }
              excludeScrollbar={false}
              label="Add..."
              outsideClickIgnoreClass="ignore-react-onclickoutside"
              preventDefault={false}
              stopPropagation={false}
            >
              <BaseSelect
                closeOnClick={true}
                disableOnClickOutside={[Function]}
                enableOnClickOutside={[Function]}
                eventTypes={
                  Array [
                    "mousedown",
                    "touchstart",
                  ]
                }
                label="Add..."
                outsideClickIgnoreClass="ignore-react-onclickoutside"
                preventDefault={false}
                stopPropagation={false}
              >
                <div
                  className="nice-dropdown nice-form-control"
                >
                  <button
                    className="nice-btn"
                    onClick={[Function]}
                  >
                    Add...
                    <i
                      className="icon fa-angle-down"
                    />
                  </button>
                  <ul
                    className="dropdown-menu"
                    onClick={[Function]}
                  >
                    <li
                      className={null}
                      data-value="Simple"
                      key="Simple"
                      onClick={[Function]}
                    >
                      <a>
                        Simple
                      </a>
                    </li>
                    <li
                      className={null}
                      data-value="Complex"
                      key="Complex"
                      onClick={[Function]}
                    >
                      <a>
                        Complex
                      </a>
                    </li>
                  </ul>
                </div>
              </BaseSelect>
            </OnClickOutside(BaseSelect)>
          </SingleSelect>
        </div>
      </TagsContainer>
    </TagContainer>
  </div>
</MultipleChoiceSelect>
`;
