---
kind: pipeline
type: docker
name: Test

platform:
    os: linux
    arch: arm

steps:
  - name: Backend
    image: python:3.8-slim
    volumes:
      - name: pip-cache
        path: /root/.cache/pip
      - name: apt-cache
        path: /var/lib/apt/lists
    commands:
      - apt-get update
      - mkdir -p /usr/share/man/man1/
      - touch /usr/share/man/man1/rmid.1.gz.dpkg-tmp
      - apt-get install -y pdftk build-essential python3-dev libffi-dev libssl-dev
      - pip install -r requirements.txt
      - python app/tests/run_tests.py

  - name: frontend
    image: node:8.16-alpine
    volumes:
      - name: npm-cache
        path: /drone/src/ui/node_modules
      - name: apk-cache
        path: /etc/apk/cache
    commands:
      - apk add build-base python
      - cd ui
      - npm install
      - npm run test

volumes:
  - name: npm-cache
    host:
      path: /var/cache/drone/npm
  - name: pip-cache
    host:
      path: /var/cache/drone/pip
  - name: apk-cache
    host:
      path: /var/cache/drone/apk

---
kind: pipeline
type: docker
name: Docker Staging

platform:
    os: linux
    arch: arm

trigger:
  event:
  - push
  - tag
  status:
  - success

depends_on:
  - Test

steps:
  - name: backup
    image: appleboy/drone-ssh:linux-arm
    failure: ignore
    settings:
      host:
        from_secret: ssh_host
      username:
        from_secret: ssh_user
      key:
        from_secret: ssh_key
      script:
        - >
          docker cp \
            "dndmachine_staging:/data/machine.db" \
            "backups/machine.staging.db.latest"
        - >
          cp "backups/machine.staging.db.latest" \
             "backups/machine.staging.db.$(date '+%Y%m%d')"

  - name: tags
    image: alpine
    commands:
      - apk add git
      - git fetch --tags
      - echo 'GIT_TAG='$(git describe --tags) >> .env

  - name: build
    image: docker
    volumes:
      - name: npm-cache
        path: /drone/src/ui/node_modules
      - name: socket
        path: /var/run/docker.sock
    commands:
        - . .env
        - |
          docker build \
              --build-arg GIT_BRANCH=${DRONE_BRANCH} \
              --build-arg GIT_COMMIT=${DRONE_COMMIT} \
              --build-arg GIT_TAG=$${GIT_TAG} \
              -t dnd-machine:staging .
    depends_on:
      - tags

  - name: restart
    image: appleboy/drone-ssh:linux-arm
    settings:
      command_timeout: 5m
      host:
        from_secret: ssh_host
      username:
        from_secret: ssh_user
      key:
        from_secret: ssh_key
      script:
        - docker stop dndmachine_staging || true
        - >
          docker cp \
            "backups/machine.production.db.latest" \
            "dndmachine_staging:/data/machine.db" || true
        - docker rm dndmachine_staging || true
        - >
          docker run \
            --detach \
            --publish "5005:5000/tcp" \
            --volume "stagingdata:/data" \
            --volume "/etc/dnd-machine/staging.json:/dnd-machine/app/config.local.json:ro" \
            --restart always \
            --name dndmachine_staging \
            "dnd-machine:staging"
    depends_on:
      - build

volumes:
  - name: npm-cache
    host:
      path: /var/cache/drone/npm
  - name: socket
    host:
      path: /var/run/docker.sock

---
kind: pipeline
type: docker
name: Docker Production

platform:
    os: linux
    arch: arm

trigger:
  event:
  - tag
  status:
  - success

depends_on:
  - Docker Staging

steps:
  - name: backup
    image: appleboy/drone-ssh:linux-arm
    failure: ignore
    settings:
      host:
        from_secret: ssh_host
      username:
        from_secret: ssh_user
      key:
        from_secret: ssh_key
      script:
        - >
          docker cp \
            "dndmachine_production:/data/machine.db" \
            "backups/machine.production.db.latest"
        - >
          cp "backups/machine.production.db.latest" \
             "backups/machine.production.db.$(date '+%Y%m%d')"

  - name: build
    image: docker
    volumes:
      - name: npm-cache
        path: /drone/src/ui/node_modules
      - name: socket
        path: /var/run/docker.sock
    commands:
        - |
          docker build \
              --build-arg GIT_BRANCH=${DRONE_BRANCH} \
              --build-arg GIT_COMMIT=${DRONE_COMMIT} \
              --build-arg GIT_TAG=${DRONE_TAG} \
              -t dnd-machine:latest \
              -t dnd-machine:${DRONE_TAG} .

  - name: restart
    image: appleboy/drone-ssh:linux-arm
    settings:
      command_timeout: 5m
      host:
        from_secret: ssh_host
      username:
        from_secret: ssh_user
      key:
        from_secret: ssh_key
      script:
        - docker stop dndmachine_production || true
        - docker rm dndmachine_production || true
        - >
          docker run \
            --detach \
            --publish "5000:5000/tcp" \
            --volume "productiondata:/data" \
            --volume "/etc/dnd-machine/production.json:/dnd-machine/app/config.local.json:ro" \
            --restart always \
            --name dndmachine_production \
            "dnd-machine:latest"
    depends_on:
      - build

volumes:
  - name: npm-cache
    host:
      path: /var/cache/drone/npm
  - name: socket
    host:
      path: /var/run/docker.sock

---
kind: signature
hmac: 69f11f84f90e7819062fd24141ceaf6efc83d210ad9a16f7092be44d0f3e7b58

...
