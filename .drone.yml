---
kind: pipeline
type: kubernetes
name: Test

platform:
    os: linux
    arch: arm

steps:
  - name: frontend
    image: node:8.17-alpine
    commands:
      - apk add build-base python
      - cd ui
      - npm install
      - npm run test
    resources:
      requests:
        cpu: 1000
        memory: 750MiB

  - name: backend
    image: python:3.11-slim-buster
    environment:
      CRYPTOGRAPHY_DONT_BUILD_RUST: 1
    commands:
      - apt-get update
      - mkdir -p /usr/share/man/man1/
      - touch /usr/share/man/man1/rmid.1.gz.dpkg-tmp
      - echo "[global]\nextra-index-url=https://www.piwheels.org/simple" >> /etc/pip.conf
      - pip install --upgrade pip
      - apt-get install -y pdftk build-essential python3-dev libssl-dev libffi-dev cargo
      - pip install --prefer-binary -r requirements.txt
      - python app/tests/run_tests.py
    resources:
      requests:
        cpu: 1000
        memory: 750MiB

---
kind: pipeline
type: kubernetes
name: Image Staging

platform:
    os: linux
    arch: arm

depends_on:
  - Test

steps:
  - name: build
    image: docker-registry.pikube.dev:31443/drone-genuinetools-img
    settings:
      registry: docker-registry-service.docker-registry:5000
      repo: dnd-machine
      build_args: GIT_BRANCH=${DRONE_BRANCH},GIT_COMMIT=${DRONE_COMMIT},GIT_TAG=unstable
      tags: ${DRONE_BRANCH},unstable
      insecure_registry: true
    resources:
      requests:
        cpu: 2000
        memory: 750MiB

---
kind: pipeline
type: kubernetes
name: Image Production

platform:
    os: linux
    arch: arm

trigger:
  event:
  - tag

depends_on:
  - Image Staging

steps:
  - name: build
    image: docker-registry.pikube.dev:31443/drone-genuinetools-img
    settings:
      registry: docker-registry-service.docker-registry:5000
      repo: dnd-machine
      build_args: GIT_BRANCH=${DRONE_BRANCH},GIT_COMMIT=${DRONE_COMMIT},GIT_TAG=${DRONE_TAG}
      auto_tag: true
      insecure_registry: true
    resources:
      requests:
        cpu: 2000
        memory: 750MiB


---
kind: pipeline
type: kubernetes
name: Notify Status

clone:
  disable: true

trigger:
  status:
  - success
  - failure

depends_on:
- Image Staging
- Image Production

platform:
  os: linux
  arch: arm

steps:
  - name: discord notification
    image: appleboy/drone-discord
    settings:
      webhook_id:
        from_secret: discord_id
      webhook_token:
        from_secret: discord_token
      username: drone.io
      color: auto
      message: >
        <:dndmachine:855198423245389844> **{{repo.name}}**

        {{#success build.status}}
        :white_check_mark: {{build.event}} build {{build.number}} succeeded. Good job.
        {{else}}
        :warning: {{build.event}} build {{build.number}} failed. Fix me please.
        {{/success}}

        {{build.link}}

        **Branch:** {{commit.branch}} {{commit.tag}}

        **Message:** {{commit.message}}

---
kind: signature
hmac: e8df945165c4d75b074d470d4f6e4b9faec1edb0e85133db583b52b6259b9e2e

...
