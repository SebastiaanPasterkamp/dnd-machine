---
kind: pipeline
name: test

platform:
    os: linux
    arch: arm

steps:
  - name: backend2
    image: python:2-alpine
    commands:
      - apk add build-base
      - pip install -r requirements.txt
      - python app/tests/run_tests.py

  - name: backend3
    image: python:3-alpine
    commands:
      - apk add build-base
      - pip install -r requirements.txt
      - python app/tests/run_tests.py

  - name: frontend
    image: node:8.15-alpine
    volumes:
      - name: cache
        path: /drone/src/ui/node_modules
    commands:
      - apk add build-base
      - cd ui
      - npm install
      - npm run test

volumes:
  - name: cache
    host:
      path: /var/cache/drone/node_modules

---
kind: pipeline
name: stage

platform:
    os: linux
    arch: arm

trigger:
  event:
  - push
  status:
  - success

depends_on:
  - test

steps:
  - name: package
    image: node:8.15-alpine
    volumes:
      - name: cache
        path: /drone/src/ui/node_modules
    commands:
      - apk add build-base
      - ( cd ui && npm install && npm run build:production )
      - |
        tar \
            --exclude app/Dockerfile \
            --exclude app/docker \
            --exclude app/tests \
            -zcvf \
                "dnd-machine.${DRONE_COMMIT_SHA:0:8}.tar.gz" \
                *.md \
                *.txt \
                run.py \
                app/

  - name: copy
    image: appleboy/drone-scp:linux-arm
    settings:
      host:
        from_secret: ssh_host
      username:
        from_secret: ssh_user
      key:
        from_secret: ssh_key
      target: ~/code/staging
      source: "dnd-machine.${DRONE_COMMIT_SHA:0:8}.tar.gz"

  - name: deploy
    image: appleboy/drone-ssh:linux-arm
    settings:
      host:
        from_secret: ssh_host
      username:
        from_secret: ssh_user
      key:
        from_secret: ssh_key
      script:
        - cd ~/code/staging
        - mkdir -p "${DRONE_COMMIT_SHA:0:8}"
        - |
          tar \
              --directory "${DRONE_COMMIT_SHA:0:8}" \
              -zxvf "dnd-machine.${DRONE_COMMIT_SHA:0:8}.tar.gz"
        - cp latest/app/config.local.json "${DRONE_COMMIT_SHA:0:8}/app/"
        - . ~/.python-env/dnd-machine-beta/bin/activate
        - pip install -r "${DRONE_COMMIT_SHA:0:8}/requirements.txt"
        - rm latest
        - ln -s "${DRONE_COMMIT_SHA:0:8}" latest
        - sudo systemctl restart dndmachine-beta

volumes:
  - name: cache
    host:
      path: /var/cache/drone/node_modules

---
kind: pipeline
name: deploy

platform:
    os: linux
    arch: arm

trigger:
  branch:
  - master
  event:
  - push
  status:
  - success

depends_on:
  - stage

steps:
  - name: package
    image: node:8.15-alpine
    volumes:
      - name: cache
        path: /drone/src/ui/node_modules
    commands:
      - apk add build-base
      - ( cd ui && npm install && npm run build:production )
      - |
        tar \
            --exclude app/Dockerfile \
            --exclude app/docker \
            --exclude app/tests \
            -zcvf \
                "dnd-machine.${DRONE_COMMIT_SHA:0:8}.tar.gz" \
                *.md \
                *.txt \
                run.py \
                app/

  - name: copy
    image: appleboy/drone-scp:linux-arm
    settings:
      host:
        from_secret: ssh_host
      username:
        from_secret: ssh_user
      key:
        from_secret: ssh_key
      target: ~/code/production
      source: "dnd-machine.${DRONE_COMMIT_SHA:0:8}.tar.gz"

  - name: deploy
    image: appleboy/drone-ssh:linux-arm
    settings:
      host:
        from_secret: ssh_host
      username:
        from_secret: ssh_user
      key:
        from_secret: ssh_key
      script:
        - cd ~/code/production
        - mkdir -p "${DRONE_COMMIT_SHA:0:8}"
        - |
          tar \
              --directory "${DRONE_COMMIT_SHA:0:8}" \
              -zxvf "dnd-machine.${DRONE_COMMIT_SHA:0:8}.tar.gz"
        - cp latest/app/config.local.json "${DRONE_COMMIT_SHA:0:8}/app/"
        - . ~/.python-env/dnd-machine/bin/activate
        - pip install -r "${DRONE_COMMIT_SHA:0:8}/requirements.txt"
        - rm latest
        - ln -s "${DRONE_COMMIT_SHA:0:8}" latest
        - sudo systemctl restart dndmachine

volumes:
  - name: cache
    host:
      path: /var/cache/drone/node_modules

---
kind: signature
hmac: 16d9fef6059c0dbe3aebf70cad1082ced1bbf8ebeab4eb6ca6c68d6440998114

...
